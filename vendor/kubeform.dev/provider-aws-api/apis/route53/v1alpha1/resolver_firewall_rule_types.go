/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type ResolverFirewallRule struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ResolverFirewallRuleSpec   `json:"spec,omitempty"`
	Status            ResolverFirewallRuleStatus `json:"status,omitempty"`
}

type ResolverFirewallRuleSpec struct {
	State *ResolverFirewallRuleSpecResource `json:"state,omitempty" tf:"-"`

	Resource ResolverFirewallRuleSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`
}

type ResolverFirewallRuleSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	Action *string `json:"action" tf:"action"`
	// +optional
	BlockOverrideDNSType *string `json:"blockOverrideDNSType,omitempty" tf:"block_override_dns_type"`
	// +optional
	BlockOverrideDomain *string `json:"blockOverrideDomain,omitempty" tf:"block_override_domain"`
	// +optional
	BlockOverrideTtl *int64 `json:"blockOverrideTtl,omitempty" tf:"block_override_ttl"`
	// +optional
	BlockResponse        *string `json:"blockResponse,omitempty" tf:"block_response"`
	FirewallDomainListID *string `json:"firewallDomainListID" tf:"firewall_domain_list_id"`
	FirewallRuleGroupID  *string `json:"firewallRuleGroupID" tf:"firewall_rule_group_id"`
	Name                 *string `json:"name" tf:"name"`
	Priority             *int64  `json:"priority" tf:"priority"`
}

type ResolverFirewallRuleStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ResolverFirewallRuleList is a list of ResolverFirewallRules
type ResolverFirewallRuleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of ResolverFirewallRule CRD objects
	Items []ResolverFirewallRule `json:"items,omitempty"`
}
