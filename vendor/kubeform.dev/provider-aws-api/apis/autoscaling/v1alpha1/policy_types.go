/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Policy struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              PolicySpec   `json:"spec,omitempty"`
	Status            PolicyStatus `json:"status,omitempty"`
}

type PolicySpecPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecificationMetricDataQueriesMetricStatMetricDimensions struct {
	Name  *string `json:"name" tf:"name"`
	Value *string `json:"value" tf:"value"`
}

type PolicySpecPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecificationMetricDataQueriesMetricStatMetric struct {
	// +optional
	Dimensions []PolicySpecPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecificationMetricDataQueriesMetricStatMetricDimensions `json:"dimensions,omitempty" tf:"dimensions"`
	MetricName *string                                                                                                                                       `json:"metricName" tf:"metric_name"`
	Namespace  *string                                                                                                                                       `json:"namespace" tf:"namespace"`
}

type PolicySpecPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecificationMetricDataQueriesMetricStat struct {
	Metric *PolicySpecPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecificationMetricDataQueriesMetricStatMetric `json:"metric" tf:"metric"`
	Stat   *string                                                                                                                            `json:"stat" tf:"stat"`
	// +optional
	Unit *string `json:"unit,omitempty" tf:"unit"`
}

type PolicySpecPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecificationMetricDataQueries struct {
	// +optional
	Expression *string `json:"expression,omitempty" tf:"expression"`
	ID         *string `json:"ID" tf:"id"`
	// +optional
	Label *string `json:"label,omitempty" tf:"label"`
	// +optional
	MetricStat *PolicySpecPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecificationMetricDataQueriesMetricStat `json:"metricStat,omitempty" tf:"metric_stat"`
	// +optional
	ReturnData *bool `json:"returnData,omitempty" tf:"return_data"`
}

type PolicySpecPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecification struct {
	// +kubebuilder:validation:MaxItems=10
	MetricDataQueries []PolicySpecPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecificationMetricDataQueries `json:"metricDataQueries" tf:"metric_data_queries"`
}

type PolicySpecPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueriesMetricStatMetricDimensions struct {
	Name  *string `json:"name" tf:"name"`
	Value *string `json:"value" tf:"value"`
}

type PolicySpecPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueriesMetricStatMetric struct {
	// +optional
	Dimensions []PolicySpecPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueriesMetricStatMetricDimensions `json:"dimensions,omitempty" tf:"dimensions"`
	MetricName *string                                                                                                                                   `json:"metricName" tf:"metric_name"`
	Namespace  *string                                                                                                                                   `json:"namespace" tf:"namespace"`
}

type PolicySpecPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueriesMetricStat struct {
	Metric *PolicySpecPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueriesMetricStatMetric `json:"metric" tf:"metric"`
	Stat   *string                                                                                                                        `json:"stat" tf:"stat"`
	// +optional
	Unit *string `json:"unit,omitempty" tf:"unit"`
}

type PolicySpecPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueries struct {
	// +optional
	Expression *string `json:"expression,omitempty" tf:"expression"`
	ID         *string `json:"ID" tf:"id"`
	// +optional
	Label *string `json:"label,omitempty" tf:"label"`
	// +optional
	MetricStat *PolicySpecPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueriesMetricStat `json:"metricStat,omitempty" tf:"metric_stat"`
	// +optional
	ReturnData *bool `json:"returnData,omitempty" tf:"return_data"`
}

type PolicySpecPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecification struct {
	// +kubebuilder:validation:MaxItems=10
	MetricDataQueries []PolicySpecPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueries `json:"metricDataQueries" tf:"metric_data_queries"`
}

type PolicySpecPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecificationMetricDataQueriesMetricStatMetricDimensions struct {
	Name  *string `json:"name" tf:"name"`
	Value *string `json:"value" tf:"value"`
}

type PolicySpecPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecificationMetricDataQueriesMetricStatMetric struct {
	// +optional
	Dimensions []PolicySpecPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecificationMetricDataQueriesMetricStatMetricDimensions `json:"dimensions,omitempty" tf:"dimensions"`
	MetricName *string                                                                                                                                      `json:"metricName" tf:"metric_name"`
	Namespace  *string                                                                                                                                      `json:"namespace" tf:"namespace"`
}

type PolicySpecPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecificationMetricDataQueriesMetricStat struct {
	Metric *PolicySpecPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecificationMetricDataQueriesMetricStatMetric `json:"metric" tf:"metric"`
	Stat   *string                                                                                                                           `json:"stat" tf:"stat"`
	// +optional
	Unit *string `json:"unit,omitempty" tf:"unit"`
}

type PolicySpecPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecificationMetricDataQueries struct {
	// +optional
	Expression *string `json:"expression,omitempty" tf:"expression"`
	ID         *string `json:"ID" tf:"id"`
	// +optional
	Label *string `json:"label,omitempty" tf:"label"`
	// +optional
	MetricStat *PolicySpecPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecificationMetricDataQueriesMetricStat `json:"metricStat,omitempty" tf:"metric_stat"`
	// +optional
	ReturnData *bool `json:"returnData,omitempty" tf:"return_data"`
}

type PolicySpecPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecification struct {
	// +kubebuilder:validation:MaxItems=10
	MetricDataQueries []PolicySpecPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecificationMetricDataQueries `json:"metricDataQueries" tf:"metric_data_queries"`
}

type PolicySpecPredictiveScalingConfigurationMetricSpecificationPredefinedLoadMetricSpecification struct {
	PredefinedMetricType *string `json:"predefinedMetricType" tf:"predefined_metric_type"`
	ResourceLabel        *string `json:"resourceLabel" tf:"resource_label"`
}

type PolicySpecPredictiveScalingConfigurationMetricSpecificationPredefinedMetricPairSpecification struct {
	PredefinedMetricType *string `json:"predefinedMetricType" tf:"predefined_metric_type"`
	ResourceLabel        *string `json:"resourceLabel" tf:"resource_label"`
}

type PolicySpecPredictiveScalingConfigurationMetricSpecificationPredefinedScalingMetricSpecification struct {
	PredefinedMetricType *string `json:"predefinedMetricType" tf:"predefined_metric_type"`
	ResourceLabel        *string `json:"resourceLabel" tf:"resource_label"`
}

type PolicySpecPredictiveScalingConfigurationMetricSpecification struct {
	// +optional
	CustomizedCapacityMetricSpecification *PolicySpecPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecification `json:"customizedCapacityMetricSpecification,omitempty" tf:"customized_capacity_metric_specification"`
	// +optional
	CustomizedLoadMetricSpecification *PolicySpecPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecification `json:"customizedLoadMetricSpecification,omitempty" tf:"customized_load_metric_specification"`
	// +optional
	CustomizedScalingMetricSpecification *PolicySpecPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecification `json:"customizedScalingMetricSpecification,omitempty" tf:"customized_scaling_metric_specification"`
	// +optional
	PredefinedLoadMetricSpecification *PolicySpecPredictiveScalingConfigurationMetricSpecificationPredefinedLoadMetricSpecification `json:"predefinedLoadMetricSpecification,omitempty" tf:"predefined_load_metric_specification"`
	// +optional
	PredefinedMetricPairSpecification *PolicySpecPredictiveScalingConfigurationMetricSpecificationPredefinedMetricPairSpecification `json:"predefinedMetricPairSpecification,omitempty" tf:"predefined_metric_pair_specification"`
	// +optional
	PredefinedScalingMetricSpecification *PolicySpecPredictiveScalingConfigurationMetricSpecificationPredefinedScalingMetricSpecification `json:"predefinedScalingMetricSpecification,omitempty" tf:"predefined_scaling_metric_specification"`
	TargetValue                          *int64                                                                                           `json:"targetValue" tf:"target_value"`
}

type PolicySpecPredictiveScalingConfiguration struct {
	// +optional
	MaxCapacityBreachBehavior *string `json:"maxCapacityBreachBehavior,omitempty" tf:"max_capacity_breach_behavior"`
	// +optional
	MaxCapacityBuffer   *string                                                      `json:"maxCapacityBuffer,omitempty" tf:"max_capacity_buffer"`
	MetricSpecification *PolicySpecPredictiveScalingConfigurationMetricSpecification `json:"metricSpecification" tf:"metric_specification"`
	// +optional
	Mode *string `json:"mode,omitempty" tf:"mode"`
	// +optional
	SchedulingBufferTime *string `json:"schedulingBufferTime,omitempty" tf:"scheduling_buffer_time"`
}

type PolicySpecStepAdjustment struct {
	// +optional
	MetricIntervalLowerBound *string `json:"metricIntervalLowerBound,omitempty" tf:"metric_interval_lower_bound"`
	// +optional
	MetricIntervalUpperBound *string `json:"metricIntervalUpperBound,omitempty" tf:"metric_interval_upper_bound"`
	ScalingAdjustment        *int64  `json:"scalingAdjustment" tf:"scaling_adjustment"`
}

type PolicySpecTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimension struct {
	Name  *string `json:"name" tf:"name"`
	Value *string `json:"value" tf:"value"`
}

type PolicySpecTargetTrackingConfigurationCustomizedMetricSpecification struct {
	// +optional
	MetricDimension []PolicySpecTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimension `json:"metricDimension,omitempty" tf:"metric_dimension"`
	MetricName      *string                                                                             `json:"metricName" tf:"metric_name"`
	Namespace       *string                                                                             `json:"namespace" tf:"namespace"`
	Statistic       *string                                                                             `json:"statistic" tf:"statistic"`
	// +optional
	Unit *string `json:"unit,omitempty" tf:"unit"`
}

type PolicySpecTargetTrackingConfigurationPredefinedMetricSpecification struct {
	PredefinedMetricType *string `json:"predefinedMetricType" tf:"predefined_metric_type"`
	// +optional
	ResourceLabel *string `json:"resourceLabel,omitempty" tf:"resource_label"`
}

type PolicySpecTargetTrackingConfiguration struct {
	// +optional
	CustomizedMetricSpecification *PolicySpecTargetTrackingConfigurationCustomizedMetricSpecification `json:"customizedMetricSpecification,omitempty" tf:"customized_metric_specification"`
	// +optional
	DisableScaleIn *bool `json:"disableScaleIn,omitempty" tf:"disable_scale_in"`
	// +optional
	PredefinedMetricSpecification *PolicySpecTargetTrackingConfigurationPredefinedMetricSpecification `json:"predefinedMetricSpecification,omitempty" tf:"predefined_metric_specification"`
	TargetValue                   *float64                                                            `json:"targetValue" tf:"target_value"`
}

type PolicySpec struct {
	State *PolicySpecResource `json:"state,omitempty" tf:"-"`

	Resource PolicySpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type PolicySpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	AdjustmentType *string `json:"adjustmentType,omitempty" tf:"adjustment_type"`
	// +optional
	Arn                  *string `json:"arn,omitempty" tf:"arn"`
	AutoscalingGroupName *string `json:"autoscalingGroupName" tf:"autoscaling_group_name"`
	// +optional
	Cooldown *int64 `json:"cooldown,omitempty" tf:"cooldown"`
	// +optional
	EstimatedInstanceWarmup *int64 `json:"estimatedInstanceWarmup,omitempty" tf:"estimated_instance_warmup"`
	// +optional
	MetricAggregationType *string `json:"metricAggregationType,omitempty" tf:"metric_aggregation_type"`
	// +optional
	MinAdjustmentMagnitude *int64  `json:"minAdjustmentMagnitude,omitempty" tf:"min_adjustment_magnitude"`
	Name                   *string `json:"name" tf:"name"`
	// +optional
	PolicyType *string `json:"policyType,omitempty" tf:"policy_type"`
	// +optional
	PredictiveScalingConfiguration *PolicySpecPredictiveScalingConfiguration `json:"predictiveScalingConfiguration,omitempty" tf:"predictive_scaling_configuration"`
	// +optional
	ScalingAdjustment *int64 `json:"scalingAdjustment,omitempty" tf:"scaling_adjustment"`
	// +optional
	StepAdjustment []PolicySpecStepAdjustment `json:"stepAdjustment,omitempty" tf:"step_adjustment"`
	// +optional
	TargetTrackingConfiguration *PolicySpecTargetTrackingConfiguration `json:"targetTrackingConfiguration,omitempty" tf:"target_tracking_configuration"`
}

type PolicyStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// PolicyList is a list of Policys
type PolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Policy CRD objects
	Items []Policy `json:"items,omitempty"`
}
