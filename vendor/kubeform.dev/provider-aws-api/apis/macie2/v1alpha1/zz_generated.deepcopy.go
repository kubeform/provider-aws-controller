// +build !ignore_autogenerated

/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	apiv1alpha1 "kubeform.dev/apimachinery/api/v1alpha1"

	runtime "k8s.io/apimachinery/pkg/runtime"
	v1 "kmodules.xyz/client-go/api/v1"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Account) DeepCopyInto(out *Account) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Account.
func (in *Account) DeepCopy() *Account {
	if in == nil {
		return nil
	}
	out := new(Account)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Account) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountList) DeepCopyInto(out *AccountList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Account, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountList.
func (in *AccountList) DeepCopy() *AccountList {
	if in == nil {
		return nil
	}
	out := new(AccountList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AccountList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountSpec) DeepCopyInto(out *AccountSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(AccountSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountSpec.
func (in *AccountSpec) DeepCopy() *AccountSpec {
	if in == nil {
		return nil
	}
	out := new(AccountSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountSpecResource) DeepCopyInto(out *AccountSpecResource) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.FindingPublishingFrequency != nil {
		in, out := &in.FindingPublishingFrequency, &out.FindingPublishingFrequency
		*out = new(string)
		**out = **in
	}
	if in.ServiceRole != nil {
		in, out := &in.ServiceRole, &out.ServiceRole
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountSpecResource.
func (in *AccountSpecResource) DeepCopy() *AccountSpecResource {
	if in == nil {
		return nil
	}
	out := new(AccountSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountStatus) DeepCopyInto(out *AccountStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountStatus.
func (in *AccountStatus) DeepCopy() *AccountStatus {
	if in == nil {
		return nil
	}
	out := new(AccountStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClassificationJob) DeepCopyInto(out *ClassificationJob) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClassificationJob.
func (in *ClassificationJob) DeepCopy() *ClassificationJob {
	if in == nil {
		return nil
	}
	out := new(ClassificationJob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClassificationJob) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClassificationJobList) DeepCopyInto(out *ClassificationJobList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClassificationJob, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClassificationJobList.
func (in *ClassificationJobList) DeepCopy() *ClassificationJobList {
	if in == nil {
		return nil
	}
	out := new(ClassificationJobList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClassificationJobList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClassificationJobSpec) DeepCopyInto(out *ClassificationJobSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ClassificationJobSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClassificationJobSpec.
func (in *ClassificationJobSpec) DeepCopy() *ClassificationJobSpec {
	if in == nil {
		return nil
	}
	out := new(ClassificationJobSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClassificationJobSpecResource) DeepCopyInto(out *ClassificationJobSpecResource) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.CustomDataIdentifierIDS != nil {
		in, out := &in.CustomDataIdentifierIDS, &out.CustomDataIdentifierIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.InitialRun != nil {
		in, out := &in.InitialRun, &out.InitialRun
		*out = new(bool)
		**out = **in
	}
	if in.JobArn != nil {
		in, out := &in.JobArn, &out.JobArn
		*out = new(string)
		**out = **in
	}
	if in.JobID != nil {
		in, out := &in.JobID, &out.JobID
		*out = new(string)
		**out = **in
	}
	if in.JobStatus != nil {
		in, out := &in.JobStatus, &out.JobStatus
		*out = new(string)
		**out = **in
	}
	if in.JobType != nil {
		in, out := &in.JobType, &out.JobType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NamePrefix != nil {
		in, out := &in.NamePrefix, &out.NamePrefix
		*out = new(string)
		**out = **in
	}
	if in.S3JobDefinition != nil {
		in, out := &in.S3JobDefinition, &out.S3JobDefinition
		*out = new(ClassificationJobSpecS3JobDefinition)
		(*in).DeepCopyInto(*out)
	}
	if in.SamplingPercentage != nil {
		in, out := &in.SamplingPercentage, &out.SamplingPercentage
		*out = new(int64)
		**out = **in
	}
	if in.ScheduleFrequency != nil {
		in, out := &in.ScheduleFrequency, &out.ScheduleFrequency
		*out = new(ClassificationJobSpecScheduleFrequency)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.UserPausedDetails != nil {
		in, out := &in.UserPausedDetails, &out.UserPausedDetails
		*out = make([]ClassificationJobSpecUserPausedDetails, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClassificationJobSpecResource.
func (in *ClassificationJobSpecResource) DeepCopy() *ClassificationJobSpecResource {
	if in == nil {
		return nil
	}
	out := new(ClassificationJobSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClassificationJobSpecS3JobDefinition) DeepCopyInto(out *ClassificationJobSpecS3JobDefinition) {
	*out = *in
	if in.BucketDefinitions != nil {
		in, out := &in.BucketDefinitions, &out.BucketDefinitions
		*out = make([]ClassificationJobSpecS3JobDefinitionBucketDefinitions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scoping != nil {
		in, out := &in.Scoping, &out.Scoping
		*out = new(ClassificationJobSpecS3JobDefinitionScoping)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClassificationJobSpecS3JobDefinition.
func (in *ClassificationJobSpecS3JobDefinition) DeepCopy() *ClassificationJobSpecS3JobDefinition {
	if in == nil {
		return nil
	}
	out := new(ClassificationJobSpecS3JobDefinition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClassificationJobSpecS3JobDefinitionBucketDefinitions) DeepCopyInto(out *ClassificationJobSpecS3JobDefinitionBucketDefinitions) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.Buckets != nil {
		in, out := &in.Buckets, &out.Buckets
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClassificationJobSpecS3JobDefinitionBucketDefinitions.
func (in *ClassificationJobSpecS3JobDefinitionBucketDefinitions) DeepCopy() *ClassificationJobSpecS3JobDefinitionBucketDefinitions {
	if in == nil {
		return nil
	}
	out := new(ClassificationJobSpecS3JobDefinitionBucketDefinitions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClassificationJobSpecS3JobDefinitionScoping) DeepCopyInto(out *ClassificationJobSpecS3JobDefinitionScoping) {
	*out = *in
	if in.Excludes != nil {
		in, out := &in.Excludes, &out.Excludes
		*out = new(ClassificationJobSpecS3JobDefinitionScopingExcludes)
		(*in).DeepCopyInto(*out)
	}
	if in.Includes != nil {
		in, out := &in.Includes, &out.Includes
		*out = new(ClassificationJobSpecS3JobDefinitionScopingIncludes)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClassificationJobSpecS3JobDefinitionScoping.
func (in *ClassificationJobSpecS3JobDefinitionScoping) DeepCopy() *ClassificationJobSpecS3JobDefinitionScoping {
	if in == nil {
		return nil
	}
	out := new(ClassificationJobSpecS3JobDefinitionScoping)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClassificationJobSpecS3JobDefinitionScopingExcludes) DeepCopyInto(out *ClassificationJobSpecS3JobDefinitionScopingExcludes) {
	*out = *in
	if in.And != nil {
		in, out := &in.And, &out.And
		*out = make([]ClassificationJobSpecS3JobDefinitionScopingExcludesAnd, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClassificationJobSpecS3JobDefinitionScopingExcludes.
func (in *ClassificationJobSpecS3JobDefinitionScopingExcludes) DeepCopy() *ClassificationJobSpecS3JobDefinitionScopingExcludes {
	if in == nil {
		return nil
	}
	out := new(ClassificationJobSpecS3JobDefinitionScopingExcludes)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClassificationJobSpecS3JobDefinitionScopingExcludesAnd) DeepCopyInto(out *ClassificationJobSpecS3JobDefinitionScopingExcludesAnd) {
	*out = *in
	if in.SimpleScopeTerm != nil {
		in, out := &in.SimpleScopeTerm, &out.SimpleScopeTerm
		*out = new(ClassificationJobSpecS3JobDefinitionScopingExcludesAndSimpleScopeTerm)
		(*in).DeepCopyInto(*out)
	}
	if in.TagScopeTerm != nil {
		in, out := &in.TagScopeTerm, &out.TagScopeTerm
		*out = new(ClassificationJobSpecS3JobDefinitionScopingExcludesAndTagScopeTerm)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClassificationJobSpecS3JobDefinitionScopingExcludesAnd.
func (in *ClassificationJobSpecS3JobDefinitionScopingExcludesAnd) DeepCopy() *ClassificationJobSpecS3JobDefinitionScopingExcludesAnd {
	if in == nil {
		return nil
	}
	out := new(ClassificationJobSpecS3JobDefinitionScopingExcludesAnd)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClassificationJobSpecS3JobDefinitionScopingExcludesAndSimpleScopeTerm) DeepCopyInto(out *ClassificationJobSpecS3JobDefinitionScopingExcludesAndSimpleScopeTerm) {
	*out = *in
	if in.Comparator != nil {
		in, out := &in.Comparator, &out.Comparator
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClassificationJobSpecS3JobDefinitionScopingExcludesAndSimpleScopeTerm.
func (in *ClassificationJobSpecS3JobDefinitionScopingExcludesAndSimpleScopeTerm) DeepCopy() *ClassificationJobSpecS3JobDefinitionScopingExcludesAndSimpleScopeTerm {
	if in == nil {
		return nil
	}
	out := new(ClassificationJobSpecS3JobDefinitionScopingExcludesAndSimpleScopeTerm)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClassificationJobSpecS3JobDefinitionScopingExcludesAndTagScopeTerm) DeepCopyInto(out *ClassificationJobSpecS3JobDefinitionScopingExcludesAndTagScopeTerm) {
	*out = *in
	if in.Comparator != nil {
		in, out := &in.Comparator, &out.Comparator
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.TagValues != nil {
		in, out := &in.TagValues, &out.TagValues
		*out = make([]ClassificationJobSpecS3JobDefinitionScopingExcludesAndTagScopeTermTagValues, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClassificationJobSpecS3JobDefinitionScopingExcludesAndTagScopeTerm.
func (in *ClassificationJobSpecS3JobDefinitionScopingExcludesAndTagScopeTerm) DeepCopy() *ClassificationJobSpecS3JobDefinitionScopingExcludesAndTagScopeTerm {
	if in == nil {
		return nil
	}
	out := new(ClassificationJobSpecS3JobDefinitionScopingExcludesAndTagScopeTerm)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClassificationJobSpecS3JobDefinitionScopingExcludesAndTagScopeTermTagValues) DeepCopyInto(out *ClassificationJobSpecS3JobDefinitionScopingExcludesAndTagScopeTermTagValues) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClassificationJobSpecS3JobDefinitionScopingExcludesAndTagScopeTermTagValues.
func (in *ClassificationJobSpecS3JobDefinitionScopingExcludesAndTagScopeTermTagValues) DeepCopy() *ClassificationJobSpecS3JobDefinitionScopingExcludesAndTagScopeTermTagValues {
	if in == nil {
		return nil
	}
	out := new(ClassificationJobSpecS3JobDefinitionScopingExcludesAndTagScopeTermTagValues)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClassificationJobSpecS3JobDefinitionScopingIncludes) DeepCopyInto(out *ClassificationJobSpecS3JobDefinitionScopingIncludes) {
	*out = *in
	if in.And != nil {
		in, out := &in.And, &out.And
		*out = make([]ClassificationJobSpecS3JobDefinitionScopingIncludesAnd, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClassificationJobSpecS3JobDefinitionScopingIncludes.
func (in *ClassificationJobSpecS3JobDefinitionScopingIncludes) DeepCopy() *ClassificationJobSpecS3JobDefinitionScopingIncludes {
	if in == nil {
		return nil
	}
	out := new(ClassificationJobSpecS3JobDefinitionScopingIncludes)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClassificationJobSpecS3JobDefinitionScopingIncludesAnd) DeepCopyInto(out *ClassificationJobSpecS3JobDefinitionScopingIncludesAnd) {
	*out = *in
	if in.SimpleScopeTerm != nil {
		in, out := &in.SimpleScopeTerm, &out.SimpleScopeTerm
		*out = new(ClassificationJobSpecS3JobDefinitionScopingIncludesAndSimpleScopeTerm)
		(*in).DeepCopyInto(*out)
	}
	if in.TagScopeTerm != nil {
		in, out := &in.TagScopeTerm, &out.TagScopeTerm
		*out = new(ClassificationJobSpecS3JobDefinitionScopingIncludesAndTagScopeTerm)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClassificationJobSpecS3JobDefinitionScopingIncludesAnd.
func (in *ClassificationJobSpecS3JobDefinitionScopingIncludesAnd) DeepCopy() *ClassificationJobSpecS3JobDefinitionScopingIncludesAnd {
	if in == nil {
		return nil
	}
	out := new(ClassificationJobSpecS3JobDefinitionScopingIncludesAnd)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClassificationJobSpecS3JobDefinitionScopingIncludesAndSimpleScopeTerm) DeepCopyInto(out *ClassificationJobSpecS3JobDefinitionScopingIncludesAndSimpleScopeTerm) {
	*out = *in
	if in.Comparator != nil {
		in, out := &in.Comparator, &out.Comparator
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClassificationJobSpecS3JobDefinitionScopingIncludesAndSimpleScopeTerm.
func (in *ClassificationJobSpecS3JobDefinitionScopingIncludesAndSimpleScopeTerm) DeepCopy() *ClassificationJobSpecS3JobDefinitionScopingIncludesAndSimpleScopeTerm {
	if in == nil {
		return nil
	}
	out := new(ClassificationJobSpecS3JobDefinitionScopingIncludesAndSimpleScopeTerm)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClassificationJobSpecS3JobDefinitionScopingIncludesAndTagScopeTerm) DeepCopyInto(out *ClassificationJobSpecS3JobDefinitionScopingIncludesAndTagScopeTerm) {
	*out = *in
	if in.Comparator != nil {
		in, out := &in.Comparator, &out.Comparator
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.TagValues != nil {
		in, out := &in.TagValues, &out.TagValues
		*out = make([]ClassificationJobSpecS3JobDefinitionScopingIncludesAndTagScopeTermTagValues, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClassificationJobSpecS3JobDefinitionScopingIncludesAndTagScopeTerm.
func (in *ClassificationJobSpecS3JobDefinitionScopingIncludesAndTagScopeTerm) DeepCopy() *ClassificationJobSpecS3JobDefinitionScopingIncludesAndTagScopeTerm {
	if in == nil {
		return nil
	}
	out := new(ClassificationJobSpecS3JobDefinitionScopingIncludesAndTagScopeTerm)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClassificationJobSpecS3JobDefinitionScopingIncludesAndTagScopeTermTagValues) DeepCopyInto(out *ClassificationJobSpecS3JobDefinitionScopingIncludesAndTagScopeTermTagValues) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClassificationJobSpecS3JobDefinitionScopingIncludesAndTagScopeTermTagValues.
func (in *ClassificationJobSpecS3JobDefinitionScopingIncludesAndTagScopeTermTagValues) DeepCopy() *ClassificationJobSpecS3JobDefinitionScopingIncludesAndTagScopeTermTagValues {
	if in == nil {
		return nil
	}
	out := new(ClassificationJobSpecS3JobDefinitionScopingIncludesAndTagScopeTermTagValues)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClassificationJobSpecScheduleFrequency) DeepCopyInto(out *ClassificationJobSpecScheduleFrequency) {
	*out = *in
	if in.DailySchedule != nil {
		in, out := &in.DailySchedule, &out.DailySchedule
		*out = new(bool)
		**out = **in
	}
	if in.MonthlySchedule != nil {
		in, out := &in.MonthlySchedule, &out.MonthlySchedule
		*out = new(int64)
		**out = **in
	}
	if in.WeeklySchedule != nil {
		in, out := &in.WeeklySchedule, &out.WeeklySchedule
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClassificationJobSpecScheduleFrequency.
func (in *ClassificationJobSpecScheduleFrequency) DeepCopy() *ClassificationJobSpecScheduleFrequency {
	if in == nil {
		return nil
	}
	out := new(ClassificationJobSpecScheduleFrequency)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClassificationJobSpecUserPausedDetails) DeepCopyInto(out *ClassificationJobSpecUserPausedDetails) {
	*out = *in
	if in.JobExpiresAt != nil {
		in, out := &in.JobExpiresAt, &out.JobExpiresAt
		*out = new(string)
		**out = **in
	}
	if in.JobImminentExpirationHealthEventArn != nil {
		in, out := &in.JobImminentExpirationHealthEventArn, &out.JobImminentExpirationHealthEventArn
		*out = new(string)
		**out = **in
	}
	if in.JobPausedAt != nil {
		in, out := &in.JobPausedAt, &out.JobPausedAt
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClassificationJobSpecUserPausedDetails.
func (in *ClassificationJobSpecUserPausedDetails) DeepCopy() *ClassificationJobSpecUserPausedDetails {
	if in == nil {
		return nil
	}
	out := new(ClassificationJobSpecUserPausedDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClassificationJobStatus) DeepCopyInto(out *ClassificationJobStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClassificationJobStatus.
func (in *ClassificationJobStatus) DeepCopy() *ClassificationJobStatus {
	if in == nil {
		return nil
	}
	out := new(ClassificationJobStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomDataIdentifier) DeepCopyInto(out *CustomDataIdentifier) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomDataIdentifier.
func (in *CustomDataIdentifier) DeepCopy() *CustomDataIdentifier {
	if in == nil {
		return nil
	}
	out := new(CustomDataIdentifier)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CustomDataIdentifier) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomDataIdentifierList) DeepCopyInto(out *CustomDataIdentifierList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CustomDataIdentifier, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomDataIdentifierList.
func (in *CustomDataIdentifierList) DeepCopy() *CustomDataIdentifierList {
	if in == nil {
		return nil
	}
	out := new(CustomDataIdentifierList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CustomDataIdentifierList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomDataIdentifierSpec) DeepCopyInto(out *CustomDataIdentifierSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(CustomDataIdentifierSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomDataIdentifierSpec.
func (in *CustomDataIdentifierSpec) DeepCopy() *CustomDataIdentifierSpec {
	if in == nil {
		return nil
	}
	out := new(CustomDataIdentifierSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomDataIdentifierSpecResource) DeepCopyInto(out *CustomDataIdentifierSpecResource) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IgnoreWords != nil {
		in, out := &in.IgnoreWords, &out.IgnoreWords
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Keywords != nil {
		in, out := &in.Keywords, &out.Keywords
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.MaximumMatchDistance != nil {
		in, out := &in.MaximumMatchDistance, &out.MaximumMatchDistance
		*out = new(int64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NamePrefix != nil {
		in, out := &in.NamePrefix, &out.NamePrefix
		*out = new(string)
		**out = **in
	}
	if in.Regex != nil {
		in, out := &in.Regex, &out.Regex
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomDataIdentifierSpecResource.
func (in *CustomDataIdentifierSpecResource) DeepCopy() *CustomDataIdentifierSpecResource {
	if in == nil {
		return nil
	}
	out := new(CustomDataIdentifierSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomDataIdentifierStatus) DeepCopyInto(out *CustomDataIdentifierStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomDataIdentifierStatus.
func (in *CustomDataIdentifierStatus) DeepCopy() *CustomDataIdentifierStatus {
	if in == nil {
		return nil
	}
	out := new(CustomDataIdentifierStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FindingsFilter) DeepCopyInto(out *FindingsFilter) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FindingsFilter.
func (in *FindingsFilter) DeepCopy() *FindingsFilter {
	if in == nil {
		return nil
	}
	out := new(FindingsFilter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FindingsFilter) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FindingsFilterList) DeepCopyInto(out *FindingsFilterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FindingsFilter, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FindingsFilterList.
func (in *FindingsFilterList) DeepCopy() *FindingsFilterList {
	if in == nil {
		return nil
	}
	out := new(FindingsFilterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FindingsFilterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FindingsFilterSpec) DeepCopyInto(out *FindingsFilterSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(FindingsFilterSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FindingsFilterSpec.
func (in *FindingsFilterSpec) DeepCopy() *FindingsFilterSpec {
	if in == nil {
		return nil
	}
	out := new(FindingsFilterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FindingsFilterSpecFindingCriteria) DeepCopyInto(out *FindingsFilterSpecFindingCriteria) {
	*out = *in
	if in.Criterion != nil {
		in, out := &in.Criterion, &out.Criterion
		*out = make([]FindingsFilterSpecFindingCriteriaCriterion, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FindingsFilterSpecFindingCriteria.
func (in *FindingsFilterSpecFindingCriteria) DeepCopy() *FindingsFilterSpecFindingCriteria {
	if in == nil {
		return nil
	}
	out := new(FindingsFilterSpecFindingCriteria)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FindingsFilterSpecFindingCriteriaCriterion) DeepCopyInto(out *FindingsFilterSpecFindingCriteriaCriterion) {
	*out = *in
	if in.Eq != nil {
		in, out := &in.Eq, &out.Eq
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.EqExactMatch != nil {
		in, out := &in.EqExactMatch, &out.EqExactMatch
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
	if in.Gt != nil {
		in, out := &in.Gt, &out.Gt
		*out = new(string)
		**out = **in
	}
	if in.Gte != nil {
		in, out := &in.Gte, &out.Gte
		*out = new(string)
		**out = **in
	}
	if in.Lt != nil {
		in, out := &in.Lt, &out.Lt
		*out = new(string)
		**out = **in
	}
	if in.Lte != nil {
		in, out := &in.Lte, &out.Lte
		*out = new(string)
		**out = **in
	}
	if in.Neq != nil {
		in, out := &in.Neq, &out.Neq
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FindingsFilterSpecFindingCriteriaCriterion.
func (in *FindingsFilterSpecFindingCriteriaCriterion) DeepCopy() *FindingsFilterSpecFindingCriteriaCriterion {
	if in == nil {
		return nil
	}
	out := new(FindingsFilterSpecFindingCriteriaCriterion)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FindingsFilterSpecResource) DeepCopyInto(out *FindingsFilterSpecResource) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FindingCriteria != nil {
		in, out := &in.FindingCriteria, &out.FindingCriteria
		*out = new(FindingsFilterSpecFindingCriteria)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NamePrefix != nil {
		in, out := &in.NamePrefix, &out.NamePrefix
		*out = new(string)
		**out = **in
	}
	if in.Position != nil {
		in, out := &in.Position, &out.Position
		*out = new(int64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FindingsFilterSpecResource.
func (in *FindingsFilterSpecResource) DeepCopy() *FindingsFilterSpecResource {
	if in == nil {
		return nil
	}
	out := new(FindingsFilterSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FindingsFilterStatus) DeepCopyInto(out *FindingsFilterStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FindingsFilterStatus.
func (in *FindingsFilterStatus) DeepCopy() *FindingsFilterStatus {
	if in == nil {
		return nil
	}
	out := new(FindingsFilterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InvitationAccepter) DeepCopyInto(out *InvitationAccepter) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InvitationAccepter.
func (in *InvitationAccepter) DeepCopy() *InvitationAccepter {
	if in == nil {
		return nil
	}
	out := new(InvitationAccepter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InvitationAccepter) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InvitationAccepterList) DeepCopyInto(out *InvitationAccepterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]InvitationAccepter, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InvitationAccepterList.
func (in *InvitationAccepterList) DeepCopy() *InvitationAccepterList {
	if in == nil {
		return nil
	}
	out := new(InvitationAccepterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InvitationAccepterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InvitationAccepterSpec) DeepCopyInto(out *InvitationAccepterSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(InvitationAccepterSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InvitationAccepterSpec.
func (in *InvitationAccepterSpec) DeepCopy() *InvitationAccepterSpec {
	if in == nil {
		return nil
	}
	out := new(InvitationAccepterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InvitationAccepterSpecResource) DeepCopyInto(out *InvitationAccepterSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AdministratorAccountID != nil {
		in, out := &in.AdministratorAccountID, &out.AdministratorAccountID
		*out = new(string)
		**out = **in
	}
	if in.InvitationID != nil {
		in, out := &in.InvitationID, &out.InvitationID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InvitationAccepterSpecResource.
func (in *InvitationAccepterSpecResource) DeepCopy() *InvitationAccepterSpecResource {
	if in == nil {
		return nil
	}
	out := new(InvitationAccepterSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InvitationAccepterStatus) DeepCopyInto(out *InvitationAccepterStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InvitationAccepterStatus.
func (in *InvitationAccepterStatus) DeepCopy() *InvitationAccepterStatus {
	if in == nil {
		return nil
	}
	out := new(InvitationAccepterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Member) DeepCopyInto(out *Member) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Member.
func (in *Member) DeepCopy() *Member {
	if in == nil {
		return nil
	}
	out := new(Member)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Member) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemberList) DeepCopyInto(out *MemberList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Member, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemberList.
func (in *MemberList) DeepCopy() *MemberList {
	if in == nil {
		return nil
	}
	out := new(MemberList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MemberList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemberSpec) DeepCopyInto(out *MemberSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(MemberSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemberSpec.
func (in *MemberSpec) DeepCopy() *MemberSpec {
	if in == nil {
		return nil
	}
	out := new(MemberSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemberSpecResource) DeepCopyInto(out *MemberSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.AdministratorAccountID != nil {
		in, out := &in.AdministratorAccountID, &out.AdministratorAccountID
		*out = new(string)
		**out = **in
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.InvitationDisableEmailNotification != nil {
		in, out := &in.InvitationDisableEmailNotification, &out.InvitationDisableEmailNotification
		*out = new(string)
		**out = **in
	}
	if in.InvitationMessage != nil {
		in, out := &in.InvitationMessage, &out.InvitationMessage
		*out = new(string)
		**out = **in
	}
	if in.Invite != nil {
		in, out := &in.Invite, &out.Invite
		*out = new(bool)
		**out = **in
	}
	if in.InvitedAt != nil {
		in, out := &in.InvitedAt, &out.InvitedAt
		*out = new(string)
		**out = **in
	}
	if in.MasterAccountID != nil {
		in, out := &in.MasterAccountID, &out.MasterAccountID
		*out = new(string)
		**out = **in
	}
	if in.RelationshipStatus != nil {
		in, out := &in.RelationshipStatus, &out.RelationshipStatus
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemberSpecResource.
func (in *MemberSpecResource) DeepCopy() *MemberSpecResource {
	if in == nil {
		return nil
	}
	out := new(MemberSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemberStatus) DeepCopyInto(out *MemberStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemberStatus.
func (in *MemberStatus) DeepCopy() *MemberStatus {
	if in == nil {
		return nil
	}
	out := new(MemberStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationAdminAccount) DeepCopyInto(out *OrganizationAdminAccount) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationAdminAccount.
func (in *OrganizationAdminAccount) DeepCopy() *OrganizationAdminAccount {
	if in == nil {
		return nil
	}
	out := new(OrganizationAdminAccount)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OrganizationAdminAccount) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationAdminAccountList) DeepCopyInto(out *OrganizationAdminAccountList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]OrganizationAdminAccount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationAdminAccountList.
func (in *OrganizationAdminAccountList) DeepCopy() *OrganizationAdminAccountList {
	if in == nil {
		return nil
	}
	out := new(OrganizationAdminAccountList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OrganizationAdminAccountList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationAdminAccountSpec) DeepCopyInto(out *OrganizationAdminAccountSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(OrganizationAdminAccountSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationAdminAccountSpec.
func (in *OrganizationAdminAccountSpec) DeepCopy() *OrganizationAdminAccountSpec {
	if in == nil {
		return nil
	}
	out := new(OrganizationAdminAccountSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationAdminAccountSpecResource) DeepCopyInto(out *OrganizationAdminAccountSpecResource) {
	*out = *in
	if in.AdminAccountID != nil {
		in, out := &in.AdminAccountID, &out.AdminAccountID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationAdminAccountSpecResource.
func (in *OrganizationAdminAccountSpecResource) DeepCopy() *OrganizationAdminAccountSpecResource {
	if in == nil {
		return nil
	}
	out := new(OrganizationAdminAccountSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationAdminAccountStatus) DeepCopyInto(out *OrganizationAdminAccountStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationAdminAccountStatus.
func (in *OrganizationAdminAccountStatus) DeepCopy() *OrganizationAdminAccountStatus {
	if in == nil {
		return nil
	}
	out := new(OrganizationAdminAccountStatus)
	in.DeepCopyInto(out)
	return out
}
