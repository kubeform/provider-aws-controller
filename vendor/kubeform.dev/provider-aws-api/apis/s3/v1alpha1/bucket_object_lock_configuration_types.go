/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type BucketObjectLockConfiguration struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              BucketObjectLockConfigurationSpec   `json:"spec,omitempty"`
	Status            BucketObjectLockConfigurationStatus `json:"status,omitempty"`
}

type BucketObjectLockConfigurationSpecRuleDefaultRetention struct {
	// +optional
	Days *int64 `json:"days,omitempty" tf:"days"`
	// +optional
	Mode *string `json:"mode,omitempty" tf:"mode"`
	// +optional
	Years *int64 `json:"years,omitempty" tf:"years"`
}

type BucketObjectLockConfigurationSpecRule struct {
	DefaultRetention *BucketObjectLockConfigurationSpecRuleDefaultRetention `json:"defaultRetention" tf:"default_retention"`
}

type BucketObjectLockConfigurationSpec struct {
	State *BucketObjectLockConfigurationSpecResource `json:"state,omitempty" tf:"-"`

	Resource BucketObjectLockConfigurationSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type BucketObjectLockConfigurationSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	Bucket *string `json:"bucket" tf:"bucket"`
	// +optional
	ExpectedBucketOwner *string `json:"expectedBucketOwner,omitempty" tf:"expected_bucket_owner"`
	// +optional
	ObjectLockEnabled *string                                `json:"objectLockEnabled,omitempty" tf:"object_lock_enabled"`
	Rule              *BucketObjectLockConfigurationSpecRule `json:"rule" tf:"rule"`
	// +optional
	Token *string `json:"-" sensitive:"true" tf:"token"`
}

type BucketObjectLockConfigurationStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// BucketObjectLockConfigurationList is a list of BucketObjectLockConfigurations
type BucketObjectLockConfigurationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of BucketObjectLockConfiguration CRD objects
	Items []BucketObjectLockConfiguration `json:"items,omitempty"`
}
