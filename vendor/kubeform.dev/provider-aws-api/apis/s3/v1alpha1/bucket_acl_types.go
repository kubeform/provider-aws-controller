/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type BucketACL struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              BucketACLSpec   `json:"spec,omitempty"`
	Status            BucketACLStatus `json:"status,omitempty"`
}

type BucketACLSpecAccessControlPolicyGrantGrantee struct {
	// +optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name"`
	// +optional
	EmailAddress *string `json:"emailAddress,omitempty" tf:"email_address"`
	// +optional
	ID   *string `json:"ID,omitempty" tf:"id"`
	Type *string `json:"type" tf:"type"`
	// +optional
	Uri *string `json:"uri,omitempty" tf:"uri"`
}

type BucketACLSpecAccessControlPolicyGrant struct {
	// +optional
	Grantee    *BucketACLSpecAccessControlPolicyGrantGrantee `json:"grantee,omitempty" tf:"grantee"`
	Permission *string                                       `json:"permission" tf:"permission"`
}

type BucketACLSpecAccessControlPolicyOwner struct {
	// +optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name"`
	ID          *string `json:"ID" tf:"id"`
}

type BucketACLSpecAccessControlPolicy struct {
	// +optional
	Grant []BucketACLSpecAccessControlPolicyGrant `json:"grant,omitempty" tf:"grant"`
	Owner *BucketACLSpecAccessControlPolicyOwner  `json:"owner" tf:"owner"`
}

type BucketACLSpec struct {
	State *BucketACLSpecResource `json:"state,omitempty" tf:"-"`

	Resource BucketACLSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type BucketACLSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	AccessControlPolicy *BucketACLSpecAccessControlPolicy `json:"accessControlPolicy,omitempty" tf:"access_control_policy"`
	// +optional
	Acl    *string `json:"acl,omitempty" tf:"acl"`
	Bucket *string `json:"bucket" tf:"bucket"`
	// +optional
	ExpectedBucketOwner *string `json:"expectedBucketOwner,omitempty" tf:"expected_bucket_owner"`
}

type BucketACLStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// BucketACLList is a list of BucketACLs
type BucketACLList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of BucketACL CRD objects
	Items []BucketACL `json:"items,omitempty"`
}
