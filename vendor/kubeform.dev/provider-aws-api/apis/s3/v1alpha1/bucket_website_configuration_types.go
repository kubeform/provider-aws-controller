/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type BucketWebsiteConfiguration struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              BucketWebsiteConfigurationSpec   `json:"spec,omitempty"`
	Status            BucketWebsiteConfigurationStatus `json:"status,omitempty"`
}

type BucketWebsiteConfigurationSpecErrorDocument struct {
	Key *string `json:"key" tf:"key"`
}

type BucketWebsiteConfigurationSpecIndexDocument struct {
	Suffix *string `json:"suffix" tf:"suffix"`
}

type BucketWebsiteConfigurationSpecRedirectAllRequestsTo struct {
	HostName *string `json:"hostName" tf:"host_name"`
	// +optional
	Protocol *string `json:"protocol,omitempty" tf:"protocol"`
}

type BucketWebsiteConfigurationSpecRoutingRuleCondition struct {
	// +optional
	HttpErrorCodeReturnedEquals *string `json:"httpErrorCodeReturnedEquals,omitempty" tf:"http_error_code_returned_equals"`
	// +optional
	KeyPrefixEquals *string `json:"keyPrefixEquals,omitempty" tf:"key_prefix_equals"`
}

type BucketWebsiteConfigurationSpecRoutingRuleRedirect struct {
	// +optional
	HostName *string `json:"hostName,omitempty" tf:"host_name"`
	// +optional
	HttpRedirectCode *string `json:"httpRedirectCode,omitempty" tf:"http_redirect_code"`
	// +optional
	Protocol *string `json:"protocol,omitempty" tf:"protocol"`
	// +optional
	ReplaceKeyPrefixWith *string `json:"replaceKeyPrefixWith,omitempty" tf:"replace_key_prefix_with"`
	// +optional
	ReplaceKeyWith *string `json:"replaceKeyWith,omitempty" tf:"replace_key_with"`
}

type BucketWebsiteConfigurationSpecRoutingRule struct {
	// +optional
	Condition *BucketWebsiteConfigurationSpecRoutingRuleCondition `json:"condition,omitempty" tf:"condition"`
	Redirect  *BucketWebsiteConfigurationSpecRoutingRuleRedirect  `json:"redirect" tf:"redirect"`
}

type BucketWebsiteConfigurationSpec struct {
	State *BucketWebsiteConfigurationSpecResource `json:"state,omitempty" tf:"-"`

	Resource BucketWebsiteConfigurationSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type BucketWebsiteConfigurationSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	Bucket *string `json:"bucket" tf:"bucket"`
	// +optional
	ErrorDocument *BucketWebsiteConfigurationSpecErrorDocument `json:"errorDocument,omitempty" tf:"error_document"`
	// +optional
	ExpectedBucketOwner *string `json:"expectedBucketOwner,omitempty" tf:"expected_bucket_owner"`
	// +optional
	IndexDocument *BucketWebsiteConfigurationSpecIndexDocument `json:"indexDocument,omitempty" tf:"index_document"`
	// +optional
	RedirectAllRequestsTo *BucketWebsiteConfigurationSpecRedirectAllRequestsTo `json:"redirectAllRequestsTo,omitempty" tf:"redirect_all_requests_to"`
	// +optional
	RoutingRule []BucketWebsiteConfigurationSpecRoutingRule `json:"routingRule,omitempty" tf:"routing_rule"`
	// +optional
	WebsiteDomain *string `json:"websiteDomain,omitempty" tf:"website_domain"`
	// +optional
	WebsiteEndpoint *string `json:"websiteEndpoint,omitempty" tf:"website_endpoint"`
}

type BucketWebsiteConfigurationStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// BucketWebsiteConfigurationList is a list of BucketWebsiteConfigurations
type BucketWebsiteConfigurationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of BucketWebsiteConfiguration CRD objects
	Items []BucketWebsiteConfiguration `json:"items,omitempty"`
}
