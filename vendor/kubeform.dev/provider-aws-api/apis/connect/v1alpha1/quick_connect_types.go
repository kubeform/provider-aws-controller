/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type QuickConnect struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              QuickConnectSpec   `json:"spec,omitempty"`
	Status            QuickConnectStatus `json:"status,omitempty"`
}

type QuickConnectSpecQuickConnectConfigPhoneConfig struct {
	PhoneNumber *string `json:"phoneNumber" tf:"phone_number"`
}

type QuickConnectSpecQuickConnectConfigQueueConfig struct {
	ContactFlowID *string `json:"contactFlowID" tf:"contact_flow_id"`
	QueueID       *string `json:"queueID" tf:"queue_id"`
}

type QuickConnectSpecQuickConnectConfigUserConfig struct {
	ContactFlowID *string `json:"contactFlowID" tf:"contact_flow_id"`
	UserID        *string `json:"userID" tf:"user_id"`
}

type QuickConnectSpecQuickConnectConfig struct {
	// +optional
	PhoneConfig []QuickConnectSpecQuickConnectConfigPhoneConfig `json:"phoneConfig,omitempty" tf:"phone_config"`
	// +optional
	QueueConfig      []QuickConnectSpecQuickConnectConfigQueueConfig `json:"queueConfig,omitempty" tf:"queue_config"`
	QuickConnectType *string                                         `json:"quickConnectType" tf:"quick_connect_type"`
	// +optional
	UserConfig []QuickConnectSpecQuickConnectConfigUserConfig `json:"userConfig,omitempty" tf:"user_config"`
}

type QuickConnectSpec struct {
	State *QuickConnectSpecResource `json:"state,omitempty" tf:"-"`

	Resource QuickConnectSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type QuickConnectSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	Arn *string `json:"arn,omitempty" tf:"arn"`
	// +optional
	Description        *string                             `json:"description,omitempty" tf:"description"`
	InstanceID         *string                             `json:"instanceID" tf:"instance_id"`
	Name               *string                             `json:"name" tf:"name"`
	QuickConnectConfig *QuickConnectSpecQuickConnectConfig `json:"quickConnectConfig" tf:"quick_connect_config"`
	// +optional
	QuickConnectID *string `json:"quickConnectID,omitempty" tf:"quick_connect_id"`
	// +optional
	Tags *map[string]string `json:"tags,omitempty" tf:"tags"`
	// +optional
	TagsAll *map[string]string `json:"tagsAll,omitempty" tf:"tags_all"`
}

type QuickConnectStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// QuickConnectList is a list of QuickConnects
type QuickConnectList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of QuickConnect CRD objects
	Items []QuickConnect `json:"items,omitempty"`
}
