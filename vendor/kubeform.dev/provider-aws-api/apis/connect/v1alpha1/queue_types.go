/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Queue struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              QueueSpec   `json:"spec,omitempty"`
	Status            QueueStatus `json:"status,omitempty"`
}

type QueueSpecOutboundCallerConfig struct {
	// +optional
	OutboundCallerIDName *string `json:"outboundCallerIDName,omitempty" tf:"outbound_caller_id_name"`
	// +optional
	OutboundCallerIDNumberID *string `json:"outboundCallerIDNumberID,omitempty" tf:"outbound_caller_id_number_id"`
	// +optional
	OutboundFlowID *string `json:"outboundFlowID,omitempty" tf:"outbound_flow_id"`
}

type QueueSpec struct {
	State *QueueSpecResource `json:"state,omitempty" tf:"-"`

	Resource QueueSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type QueueSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	Arn *string `json:"arn,omitempty" tf:"arn"`
	// +optional
	Description        *string `json:"description,omitempty" tf:"description"`
	HoursOfOperationID *string `json:"hoursOfOperationID" tf:"hours_of_operation_id"`
	InstanceID         *string `json:"instanceID" tf:"instance_id"`
	// +optional
	MaxContacts *int64  `json:"maxContacts,omitempty" tf:"max_contacts"`
	Name        *string `json:"name" tf:"name"`
	// +optional
	OutboundCallerConfig *QueueSpecOutboundCallerConfig `json:"outboundCallerConfig,omitempty" tf:"outbound_caller_config"`
	// +optional
	QueueID *string `json:"queueID,omitempty" tf:"queue_id"`
	// +optional
	QuickConnectIDS []string `json:"quickConnectIDS,omitempty" tf:"quick_connect_ids"`
	// +optional
	QuickConnectIDSAssociated []string `json:"quickConnectIDSAssociated,omitempty" tf:"quick_connect_ids_associated"`
	// +optional
	Status *string `json:"status,omitempty" tf:"status"`
	// +optional
	Tags *map[string]string `json:"tags,omitempty" tf:"tags"`
	// +optional
	TagsAll *map[string]string `json:"tagsAll,omitempty" tf:"tags_all"`
}

type QueueStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// QueueList is a list of Queues
type QueueList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Queue CRD objects
	Items []Queue `json:"items,omitempty"`
}
