/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type ThingGroup struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ThingGroupSpec   `json:"spec,omitempty"`
	Status            ThingGroupStatus `json:"status,omitempty"`
}

type ThingGroupSpecMetadataRootToParentGroups struct {
	// +optional
	GroupArn *string `json:"groupArn,omitempty" tf:"group_arn"`
	// +optional
	GroupName *string `json:"groupName,omitempty" tf:"group_name"`
}

type ThingGroupSpecMetadata struct {
	// +optional
	CreationDate *string `json:"creationDate,omitempty" tf:"creation_date"`
	// +optional
	ParentGroupName *string `json:"parentGroupName,omitempty" tf:"parent_group_name"`
	// +optional
	RootToParentGroups []ThingGroupSpecMetadataRootToParentGroups `json:"rootToParentGroups,omitempty" tf:"root_to_parent_groups"`
}

type ThingGroupSpecPropertiesAttributePayload struct {
	// +optional
	Attributes *map[string]string `json:"attributes,omitempty" tf:"attributes"`
}

type ThingGroupSpecProperties struct {
	// +optional
	AttributePayload *ThingGroupSpecPropertiesAttributePayload `json:"attributePayload,omitempty" tf:"attribute_payload"`
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
}

type ThingGroupSpec struct {
	State *ThingGroupSpecResource `json:"state,omitempty" tf:"-"`

	Resource ThingGroupSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type ThingGroupSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	Arn *string `json:"arn,omitempty" tf:"arn"`
	// +optional
	Metadata []ThingGroupSpecMetadata `json:"metadata,omitempty" tf:"metadata"`
	Name     *string                  `json:"name" tf:"name"`
	// +optional
	ParentGroupName *string `json:"parentGroupName,omitempty" tf:"parent_group_name"`
	// +optional
	Properties *ThingGroupSpecProperties `json:"properties,omitempty" tf:"properties"`
	// +optional
	Tags *map[string]string `json:"tags,omitempty" tf:"tags"`
	// +optional
	TagsAll *map[string]string `json:"tagsAll,omitempty" tf:"tags_all"`
	// +optional
	Version *int64 `json:"version,omitempty" tf:"version"`
}

type ThingGroupStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ThingGroupList is a list of ThingGroups
type ThingGroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of ThingGroup CRD objects
	Items []ThingGroup `json:"items,omitempty"`
}
