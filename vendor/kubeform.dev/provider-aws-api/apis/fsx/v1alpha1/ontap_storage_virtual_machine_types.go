/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type OntapStorageVirtualMachine struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              OntapStorageVirtualMachineSpec   `json:"spec,omitempty"`
	Status            OntapStorageVirtualMachineStatus `json:"status,omitempty"`
}

type OntapStorageVirtualMachineSpecActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration struct {
	// +kubebuilder:validation:MaxItems=3
	// +kubebuilder:validation:MinItems=1
	DnsIPS     []string `json:"dnsIPS" tf:"dns_ips"`
	DomainName *string  `json:"domainName" tf:"domain_name"`
	// +optional
	FileSystemAdministratorsGroup *string `json:"fileSystemAdministratorsGroup,omitempty" tf:"file_system_administrators_group"`
	// +optional
	OrganizationalUnitDistinguishedName *string `json:"organizationalUnitDistinguishedName,omitempty" tf:"organizational_unit_distinguished_name"`
	Password                            *string `json:"-" sensitive:"true" tf:"password"`
	Username                            *string `json:"username" tf:"username"`
}

type OntapStorageVirtualMachineSpecActiveDirectoryConfiguration struct {
	// +optional
	NetbiosName *string `json:"netbiosName,omitempty" tf:"netbios_name"`
	// +optional
	SelfManagedActiveDirectoryConfiguration *OntapStorageVirtualMachineSpecActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration `json:"selfManagedActiveDirectoryConfiguration,omitempty" tf:"self_managed_active_directory_configuration"`
}

type OntapStorageVirtualMachineSpecEndpointsIscsi struct {
	// +optional
	DnsName *string `json:"dnsName,omitempty" tf:"dns_name"`
	// +optional
	IpAddresses []string `json:"ipAddresses,omitempty" tf:"ip_addresses"`
}

type OntapStorageVirtualMachineSpecEndpointsManagement struct {
	// +optional
	DnsName *string `json:"dnsName,omitempty" tf:"dns_name"`
	// +optional
	IpAddresses []string `json:"ipAddresses,omitempty" tf:"ip_addresses"`
}

type OntapStorageVirtualMachineSpecEndpointsNfs struct {
	// +optional
	DnsName *string `json:"dnsName,omitempty" tf:"dns_name"`
	// +optional
	IpAddresses []string `json:"ipAddresses,omitempty" tf:"ip_addresses"`
}

type OntapStorageVirtualMachineSpecEndpointsSmb struct {
	// +optional
	DnsName *string `json:"dnsName,omitempty" tf:"dns_name"`
	// +optional
	IpAddresses []string `json:"ipAddresses,omitempty" tf:"ip_addresses"`
}

type OntapStorageVirtualMachineSpecEndpoints struct {
	// +optional
	Iscsi []OntapStorageVirtualMachineSpecEndpointsIscsi `json:"iscsi,omitempty" tf:"iscsi"`
	// +optional
	Management []OntapStorageVirtualMachineSpecEndpointsManagement `json:"management,omitempty" tf:"management"`
	// +optional
	Nfs []OntapStorageVirtualMachineSpecEndpointsNfs `json:"nfs,omitempty" tf:"nfs"`
	// +optional
	Smb []OntapStorageVirtualMachineSpecEndpointsSmb `json:"smb,omitempty" tf:"smb"`
}

type OntapStorageVirtualMachineSpec struct {
	State *OntapStorageVirtualMachineSpecResource `json:"state,omitempty" tf:"-"`

	Resource OntapStorageVirtualMachineSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type OntapStorageVirtualMachineSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	ActiveDirectoryConfiguration *OntapStorageVirtualMachineSpecActiveDirectoryConfiguration `json:"activeDirectoryConfiguration,omitempty" tf:"active_directory_configuration"`
	// +optional
	Arn *string `json:"arn,omitempty" tf:"arn"`
	// +optional
	Endpoints    []OntapStorageVirtualMachineSpecEndpoints `json:"endpoints,omitempty" tf:"endpoints"`
	FileSystemID *string                                   `json:"fileSystemID" tf:"file_system_id"`
	Name         *string                                   `json:"name" tf:"name"`
	// +optional
	RootVolumeSecurityStyle *string `json:"rootVolumeSecurityStyle,omitempty" tf:"root_volume_security_style"`
	// +optional
	Subtype *string `json:"subtype,omitempty" tf:"subtype"`
	// +optional
	SvmAdminPassword *string `json:"-" sensitive:"true" tf:"svm_admin_password"`
	// +optional
	Tags *map[string]string `json:"tags,omitempty" tf:"tags"`
	// +optional
	TagsAll *map[string]string `json:"tagsAll,omitempty" tf:"tags_all"`
	// +optional
	Uuid *string `json:"uuid,omitempty" tf:"uuid"`
}

type OntapStorageVirtualMachineStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// OntapStorageVirtualMachineList is a list of OntapStorageVirtualMachines
type OntapStorageVirtualMachineList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of OntapStorageVirtualMachine CRD objects
	Items []OntapStorageVirtualMachine `json:"items,omitempty"`
}
