//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	apiv1alpha1 "kubeform.dev/apimachinery/api/v1alpha1"

	v1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	apiv1 "kmodules.xyz/client-go/api/v1"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Backup) DeepCopyInto(out *Backup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Backup.
func (in *Backup) DeepCopy() *Backup {
	if in == nil {
		return nil
	}
	out := new(Backup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Backup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupList) DeepCopyInto(out *BackupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Backup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupList.
func (in *BackupList) DeepCopy() *BackupList {
	if in == nil {
		return nil
	}
	out := new(BackupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BackupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupSpec) DeepCopyInto(out *BackupSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(BackupSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupSpec.
func (in *BackupSpec) DeepCopy() *BackupSpec {
	if in == nil {
		return nil
	}
	out := new(BackupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupSpecResource) DeepCopyInto(out *BackupSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.FileSystemID != nil {
		in, out := &in.FileSystemID, &out.FileSystemID
		*out = new(string)
		**out = **in
	}
	if in.KmsKeyID != nil {
		in, out := &in.KmsKeyID, &out.KmsKeyID
		*out = new(string)
		**out = **in
	}
	if in.OwnerID != nil {
		in, out := &in.OwnerID, &out.OwnerID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupSpecResource.
func (in *BackupSpecResource) DeepCopy() *BackupSpecResource {
	if in == nil {
		return nil
	}
	out := new(BackupSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupStatus) DeepCopyInto(out *BackupStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupStatus.
func (in *BackupStatus) DeepCopy() *BackupStatus {
	if in == nil {
		return nil
	}
	out := new(BackupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataRepositoryAssociation) DeepCopyInto(out *DataRepositoryAssociation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataRepositoryAssociation.
func (in *DataRepositoryAssociation) DeepCopy() *DataRepositoryAssociation {
	if in == nil {
		return nil
	}
	out := new(DataRepositoryAssociation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataRepositoryAssociation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataRepositoryAssociationList) DeepCopyInto(out *DataRepositoryAssociationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DataRepositoryAssociation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataRepositoryAssociationList.
func (in *DataRepositoryAssociationList) DeepCopy() *DataRepositoryAssociationList {
	if in == nil {
		return nil
	}
	out := new(DataRepositoryAssociationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataRepositoryAssociationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataRepositoryAssociationSpec) DeepCopyInto(out *DataRepositoryAssociationSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(DataRepositoryAssociationSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataRepositoryAssociationSpec.
func (in *DataRepositoryAssociationSpec) DeepCopy() *DataRepositoryAssociationSpec {
	if in == nil {
		return nil
	}
	out := new(DataRepositoryAssociationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataRepositoryAssociationSpecResource) DeepCopyInto(out *DataRepositoryAssociationSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AssociationID != nil {
		in, out := &in.AssociationID, &out.AssociationID
		*out = new(string)
		**out = **in
	}
	if in.BatchImportMetaDataOnCreate != nil {
		in, out := &in.BatchImportMetaDataOnCreate, &out.BatchImportMetaDataOnCreate
		*out = new(bool)
		**out = **in
	}
	if in.DataRepositoryPath != nil {
		in, out := &in.DataRepositoryPath, &out.DataRepositoryPath
		*out = new(string)
		**out = **in
	}
	if in.DeleteDataInFilesystem != nil {
		in, out := &in.DeleteDataInFilesystem, &out.DeleteDataInFilesystem
		*out = new(bool)
		**out = **in
	}
	if in.FileSystemID != nil {
		in, out := &in.FileSystemID, &out.FileSystemID
		*out = new(string)
		**out = **in
	}
	if in.FileSystemPath != nil {
		in, out := &in.FileSystemPath, &out.FileSystemPath
		*out = new(string)
		**out = **in
	}
	if in.ImportedFileChunkSize != nil {
		in, out := &in.ImportedFileChunkSize, &out.ImportedFileChunkSize
		*out = new(int64)
		**out = **in
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = new(DataRepositoryAssociationSpecS3)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataRepositoryAssociationSpecResource.
func (in *DataRepositoryAssociationSpecResource) DeepCopy() *DataRepositoryAssociationSpecResource {
	if in == nil {
		return nil
	}
	out := new(DataRepositoryAssociationSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataRepositoryAssociationSpecS3) DeepCopyInto(out *DataRepositoryAssociationSpecS3) {
	*out = *in
	if in.AutoExportPolicy != nil {
		in, out := &in.AutoExportPolicy, &out.AutoExportPolicy
		*out = new(DataRepositoryAssociationSpecS3AutoExportPolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.AutoImportPolicy != nil {
		in, out := &in.AutoImportPolicy, &out.AutoImportPolicy
		*out = new(DataRepositoryAssociationSpecS3AutoImportPolicy)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataRepositoryAssociationSpecS3.
func (in *DataRepositoryAssociationSpecS3) DeepCopy() *DataRepositoryAssociationSpecS3 {
	if in == nil {
		return nil
	}
	out := new(DataRepositoryAssociationSpecS3)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataRepositoryAssociationSpecS3AutoExportPolicy) DeepCopyInto(out *DataRepositoryAssociationSpecS3AutoExportPolicy) {
	*out = *in
	if in.Events != nil {
		in, out := &in.Events, &out.Events
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataRepositoryAssociationSpecS3AutoExportPolicy.
func (in *DataRepositoryAssociationSpecS3AutoExportPolicy) DeepCopy() *DataRepositoryAssociationSpecS3AutoExportPolicy {
	if in == nil {
		return nil
	}
	out := new(DataRepositoryAssociationSpecS3AutoExportPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataRepositoryAssociationSpecS3AutoImportPolicy) DeepCopyInto(out *DataRepositoryAssociationSpecS3AutoImportPolicy) {
	*out = *in
	if in.Events != nil {
		in, out := &in.Events, &out.Events
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataRepositoryAssociationSpecS3AutoImportPolicy.
func (in *DataRepositoryAssociationSpecS3AutoImportPolicy) DeepCopy() *DataRepositoryAssociationSpecS3AutoImportPolicy {
	if in == nil {
		return nil
	}
	out := new(DataRepositoryAssociationSpecS3AutoImportPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataRepositoryAssociationStatus) DeepCopyInto(out *DataRepositoryAssociationStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataRepositoryAssociationStatus.
func (in *DataRepositoryAssociationStatus) DeepCopy() *DataRepositoryAssociationStatus {
	if in == nil {
		return nil
	}
	out := new(DataRepositoryAssociationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LustreFileSystem) DeepCopyInto(out *LustreFileSystem) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LustreFileSystem.
func (in *LustreFileSystem) DeepCopy() *LustreFileSystem {
	if in == nil {
		return nil
	}
	out := new(LustreFileSystem)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LustreFileSystem) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LustreFileSystemList) DeepCopyInto(out *LustreFileSystemList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LustreFileSystem, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LustreFileSystemList.
func (in *LustreFileSystemList) DeepCopy() *LustreFileSystemList {
	if in == nil {
		return nil
	}
	out := new(LustreFileSystemList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LustreFileSystemList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LustreFileSystemSpec) DeepCopyInto(out *LustreFileSystemSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(LustreFileSystemSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LustreFileSystemSpec.
func (in *LustreFileSystemSpec) DeepCopy() *LustreFileSystemSpec {
	if in == nil {
		return nil
	}
	out := new(LustreFileSystemSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LustreFileSystemSpecLogConfiguration) DeepCopyInto(out *LustreFileSystemSpecLogConfiguration) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.Level != nil {
		in, out := &in.Level, &out.Level
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LustreFileSystemSpecLogConfiguration.
func (in *LustreFileSystemSpecLogConfiguration) DeepCopy() *LustreFileSystemSpecLogConfiguration {
	if in == nil {
		return nil
	}
	out := new(LustreFileSystemSpecLogConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LustreFileSystemSpecResource) DeepCopyInto(out *LustreFileSystemSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AutoImportPolicy != nil {
		in, out := &in.AutoImportPolicy, &out.AutoImportPolicy
		*out = new(string)
		**out = **in
	}
	if in.AutomaticBackupRetentionDays != nil {
		in, out := &in.AutomaticBackupRetentionDays, &out.AutomaticBackupRetentionDays
		*out = new(int64)
		**out = **in
	}
	if in.BackupID != nil {
		in, out := &in.BackupID, &out.BackupID
		*out = new(string)
		**out = **in
	}
	if in.CopyTagsToBackups != nil {
		in, out := &in.CopyTagsToBackups, &out.CopyTagsToBackups
		*out = new(bool)
		**out = **in
	}
	if in.DailyAutomaticBackupStartTime != nil {
		in, out := &in.DailyAutomaticBackupStartTime, &out.DailyAutomaticBackupStartTime
		*out = new(string)
		**out = **in
	}
	if in.DataCompressionType != nil {
		in, out := &in.DataCompressionType, &out.DataCompressionType
		*out = new(string)
		**out = **in
	}
	if in.DeploymentType != nil {
		in, out := &in.DeploymentType, &out.DeploymentType
		*out = new(string)
		**out = **in
	}
	if in.DnsName != nil {
		in, out := &in.DnsName, &out.DnsName
		*out = new(string)
		**out = **in
	}
	if in.DriveCacheType != nil {
		in, out := &in.DriveCacheType, &out.DriveCacheType
		*out = new(string)
		**out = **in
	}
	if in.ExportPath != nil {
		in, out := &in.ExportPath, &out.ExportPath
		*out = new(string)
		**out = **in
	}
	if in.FileSystemTypeVersion != nil {
		in, out := &in.FileSystemTypeVersion, &out.FileSystemTypeVersion
		*out = new(string)
		**out = **in
	}
	if in.ImportPath != nil {
		in, out := &in.ImportPath, &out.ImportPath
		*out = new(string)
		**out = **in
	}
	if in.ImportedFileChunkSize != nil {
		in, out := &in.ImportedFileChunkSize, &out.ImportedFileChunkSize
		*out = new(int64)
		**out = **in
	}
	if in.KmsKeyID != nil {
		in, out := &in.KmsKeyID, &out.KmsKeyID
		*out = new(string)
		**out = **in
	}
	if in.LogConfiguration != nil {
		in, out := &in.LogConfiguration, &out.LogConfiguration
		*out = new(LustreFileSystemSpecLogConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.MountName != nil {
		in, out := &in.MountName, &out.MountName
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceIDS != nil {
		in, out := &in.NetworkInterfaceIDS, &out.NetworkInterfaceIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.OwnerID != nil {
		in, out := &in.OwnerID, &out.OwnerID
		*out = new(string)
		**out = **in
	}
	if in.PerUnitStorageThroughput != nil {
		in, out := &in.PerUnitStorageThroughput, &out.PerUnitStorageThroughput
		*out = new(int64)
		**out = **in
	}
	if in.SecurityGroupIDS != nil {
		in, out := &in.SecurityGroupIDS, &out.SecurityGroupIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.StorageCapacity != nil {
		in, out := &in.StorageCapacity, &out.StorageCapacity
		*out = new(int64)
		**out = **in
	}
	if in.StorageType != nil {
		in, out := &in.StorageType, &out.StorageType
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDS != nil {
		in, out := &in.SubnetIDS, &out.SubnetIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.VpcID != nil {
		in, out := &in.VpcID, &out.VpcID
		*out = new(string)
		**out = **in
	}
	if in.WeeklyMaintenanceStartTime != nil {
		in, out := &in.WeeklyMaintenanceStartTime, &out.WeeklyMaintenanceStartTime
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LustreFileSystemSpecResource.
func (in *LustreFileSystemSpecResource) DeepCopy() *LustreFileSystemSpecResource {
	if in == nil {
		return nil
	}
	out := new(LustreFileSystemSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LustreFileSystemStatus) DeepCopyInto(out *LustreFileSystemStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LustreFileSystemStatus.
func (in *LustreFileSystemStatus) DeepCopy() *LustreFileSystemStatus {
	if in == nil {
		return nil
	}
	out := new(LustreFileSystemStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OntapFileSystem) DeepCopyInto(out *OntapFileSystem) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OntapFileSystem.
func (in *OntapFileSystem) DeepCopy() *OntapFileSystem {
	if in == nil {
		return nil
	}
	out := new(OntapFileSystem)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OntapFileSystem) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OntapFileSystemList) DeepCopyInto(out *OntapFileSystemList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]OntapFileSystem, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OntapFileSystemList.
func (in *OntapFileSystemList) DeepCopy() *OntapFileSystemList {
	if in == nil {
		return nil
	}
	out := new(OntapFileSystemList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OntapFileSystemList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OntapFileSystemSpec) DeepCopyInto(out *OntapFileSystemSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(OntapFileSystemSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OntapFileSystemSpec.
func (in *OntapFileSystemSpec) DeepCopy() *OntapFileSystemSpec {
	if in == nil {
		return nil
	}
	out := new(OntapFileSystemSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OntapFileSystemSpecDiskIopsConfiguration) DeepCopyInto(out *OntapFileSystemSpecDiskIopsConfiguration) {
	*out = *in
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(int64)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OntapFileSystemSpecDiskIopsConfiguration.
func (in *OntapFileSystemSpecDiskIopsConfiguration) DeepCopy() *OntapFileSystemSpecDiskIopsConfiguration {
	if in == nil {
		return nil
	}
	out := new(OntapFileSystemSpecDiskIopsConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OntapFileSystemSpecEndpoints) DeepCopyInto(out *OntapFileSystemSpecEndpoints) {
	*out = *in
	if in.Intercluster != nil {
		in, out := &in.Intercluster, &out.Intercluster
		*out = make([]OntapFileSystemSpecEndpointsIntercluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Management != nil {
		in, out := &in.Management, &out.Management
		*out = make([]OntapFileSystemSpecEndpointsManagement, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OntapFileSystemSpecEndpoints.
func (in *OntapFileSystemSpecEndpoints) DeepCopy() *OntapFileSystemSpecEndpoints {
	if in == nil {
		return nil
	}
	out := new(OntapFileSystemSpecEndpoints)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OntapFileSystemSpecEndpointsIntercluster) DeepCopyInto(out *OntapFileSystemSpecEndpointsIntercluster) {
	*out = *in
	if in.DnsName != nil {
		in, out := &in.DnsName, &out.DnsName
		*out = new(string)
		**out = **in
	}
	if in.IpAddresses != nil {
		in, out := &in.IpAddresses, &out.IpAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OntapFileSystemSpecEndpointsIntercluster.
func (in *OntapFileSystemSpecEndpointsIntercluster) DeepCopy() *OntapFileSystemSpecEndpointsIntercluster {
	if in == nil {
		return nil
	}
	out := new(OntapFileSystemSpecEndpointsIntercluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OntapFileSystemSpecEndpointsManagement) DeepCopyInto(out *OntapFileSystemSpecEndpointsManagement) {
	*out = *in
	if in.DnsName != nil {
		in, out := &in.DnsName, &out.DnsName
		*out = new(string)
		**out = **in
	}
	if in.IpAddresses != nil {
		in, out := &in.IpAddresses, &out.IpAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OntapFileSystemSpecEndpointsManagement.
func (in *OntapFileSystemSpecEndpointsManagement) DeepCopy() *OntapFileSystemSpecEndpointsManagement {
	if in == nil {
		return nil
	}
	out := new(OntapFileSystemSpecEndpointsManagement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OntapFileSystemSpecResource) DeepCopyInto(out *OntapFileSystemSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AutomaticBackupRetentionDays != nil {
		in, out := &in.AutomaticBackupRetentionDays, &out.AutomaticBackupRetentionDays
		*out = new(int64)
		**out = **in
	}
	if in.DailyAutomaticBackupStartTime != nil {
		in, out := &in.DailyAutomaticBackupStartTime, &out.DailyAutomaticBackupStartTime
		*out = new(string)
		**out = **in
	}
	if in.DeploymentType != nil {
		in, out := &in.DeploymentType, &out.DeploymentType
		*out = new(string)
		**out = **in
	}
	if in.DiskIopsConfiguration != nil {
		in, out := &in.DiskIopsConfiguration, &out.DiskIopsConfiguration
		*out = new(OntapFileSystemSpecDiskIopsConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.DnsName != nil {
		in, out := &in.DnsName, &out.DnsName
		*out = new(string)
		**out = **in
	}
	if in.EndpointIPAddressRange != nil {
		in, out := &in.EndpointIPAddressRange, &out.EndpointIPAddressRange
		*out = new(string)
		**out = **in
	}
	if in.Endpoints != nil {
		in, out := &in.Endpoints, &out.Endpoints
		*out = make([]OntapFileSystemSpecEndpoints, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FsxAdminPassword != nil {
		in, out := &in.FsxAdminPassword, &out.FsxAdminPassword
		*out = new(string)
		**out = **in
	}
	if in.KmsKeyID != nil {
		in, out := &in.KmsKeyID, &out.KmsKeyID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceIDS != nil {
		in, out := &in.NetworkInterfaceIDS, &out.NetworkInterfaceIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.OwnerID != nil {
		in, out := &in.OwnerID, &out.OwnerID
		*out = new(string)
		**out = **in
	}
	if in.PreferredSubnetID != nil {
		in, out := &in.PreferredSubnetID, &out.PreferredSubnetID
		*out = new(string)
		**out = **in
	}
	if in.RouteTableIDS != nil {
		in, out := &in.RouteTableIDS, &out.RouteTableIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SecurityGroupIDS != nil {
		in, out := &in.SecurityGroupIDS, &out.SecurityGroupIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.StorageCapacity != nil {
		in, out := &in.StorageCapacity, &out.StorageCapacity
		*out = new(int64)
		**out = **in
	}
	if in.StorageType != nil {
		in, out := &in.StorageType, &out.StorageType
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDS != nil {
		in, out := &in.SubnetIDS, &out.SubnetIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.ThroughputCapacity != nil {
		in, out := &in.ThroughputCapacity, &out.ThroughputCapacity
		*out = new(int64)
		**out = **in
	}
	if in.VpcID != nil {
		in, out := &in.VpcID, &out.VpcID
		*out = new(string)
		**out = **in
	}
	if in.WeeklyMaintenanceStartTime != nil {
		in, out := &in.WeeklyMaintenanceStartTime, &out.WeeklyMaintenanceStartTime
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OntapFileSystemSpecResource.
func (in *OntapFileSystemSpecResource) DeepCopy() *OntapFileSystemSpecResource {
	if in == nil {
		return nil
	}
	out := new(OntapFileSystemSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OntapFileSystemStatus) DeepCopyInto(out *OntapFileSystemStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OntapFileSystemStatus.
func (in *OntapFileSystemStatus) DeepCopy() *OntapFileSystemStatus {
	if in == nil {
		return nil
	}
	out := new(OntapFileSystemStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OntapStorageVirtualMachine) DeepCopyInto(out *OntapStorageVirtualMachine) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OntapStorageVirtualMachine.
func (in *OntapStorageVirtualMachine) DeepCopy() *OntapStorageVirtualMachine {
	if in == nil {
		return nil
	}
	out := new(OntapStorageVirtualMachine)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OntapStorageVirtualMachine) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OntapStorageVirtualMachineList) DeepCopyInto(out *OntapStorageVirtualMachineList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]OntapStorageVirtualMachine, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OntapStorageVirtualMachineList.
func (in *OntapStorageVirtualMachineList) DeepCopy() *OntapStorageVirtualMachineList {
	if in == nil {
		return nil
	}
	out := new(OntapStorageVirtualMachineList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OntapStorageVirtualMachineList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OntapStorageVirtualMachineSpec) DeepCopyInto(out *OntapStorageVirtualMachineSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(OntapStorageVirtualMachineSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OntapStorageVirtualMachineSpec.
func (in *OntapStorageVirtualMachineSpec) DeepCopy() *OntapStorageVirtualMachineSpec {
	if in == nil {
		return nil
	}
	out := new(OntapStorageVirtualMachineSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OntapStorageVirtualMachineSpecActiveDirectoryConfiguration) DeepCopyInto(out *OntapStorageVirtualMachineSpecActiveDirectoryConfiguration) {
	*out = *in
	if in.NetbiosName != nil {
		in, out := &in.NetbiosName, &out.NetbiosName
		*out = new(string)
		**out = **in
	}
	if in.SelfManagedActiveDirectoryConfiguration != nil {
		in, out := &in.SelfManagedActiveDirectoryConfiguration, &out.SelfManagedActiveDirectoryConfiguration
		*out = new(OntapStorageVirtualMachineSpecActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OntapStorageVirtualMachineSpecActiveDirectoryConfiguration.
func (in *OntapStorageVirtualMachineSpecActiveDirectoryConfiguration) DeepCopy() *OntapStorageVirtualMachineSpecActiveDirectoryConfiguration {
	if in == nil {
		return nil
	}
	out := new(OntapStorageVirtualMachineSpecActiveDirectoryConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OntapStorageVirtualMachineSpecActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration) DeepCopyInto(out *OntapStorageVirtualMachineSpecActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration) {
	*out = *in
	if in.DnsIPS != nil {
		in, out := &in.DnsIPS, &out.DnsIPS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.FileSystemAdministratorsGroup != nil {
		in, out := &in.FileSystemAdministratorsGroup, &out.FileSystemAdministratorsGroup
		*out = new(string)
		**out = **in
	}
	if in.OrganizationalUnitDistinguishedName != nil {
		in, out := &in.OrganizationalUnitDistinguishedName, &out.OrganizationalUnitDistinguishedName
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OntapStorageVirtualMachineSpecActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration.
func (in *OntapStorageVirtualMachineSpecActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration) DeepCopy() *OntapStorageVirtualMachineSpecActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration {
	if in == nil {
		return nil
	}
	out := new(OntapStorageVirtualMachineSpecActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OntapStorageVirtualMachineSpecEndpoints) DeepCopyInto(out *OntapStorageVirtualMachineSpecEndpoints) {
	*out = *in
	if in.Iscsi != nil {
		in, out := &in.Iscsi, &out.Iscsi
		*out = make([]OntapStorageVirtualMachineSpecEndpointsIscsi, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Management != nil {
		in, out := &in.Management, &out.Management
		*out = make([]OntapStorageVirtualMachineSpecEndpointsManagement, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Nfs != nil {
		in, out := &in.Nfs, &out.Nfs
		*out = make([]OntapStorageVirtualMachineSpecEndpointsNfs, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Smb != nil {
		in, out := &in.Smb, &out.Smb
		*out = make([]OntapStorageVirtualMachineSpecEndpointsSmb, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OntapStorageVirtualMachineSpecEndpoints.
func (in *OntapStorageVirtualMachineSpecEndpoints) DeepCopy() *OntapStorageVirtualMachineSpecEndpoints {
	if in == nil {
		return nil
	}
	out := new(OntapStorageVirtualMachineSpecEndpoints)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OntapStorageVirtualMachineSpecEndpointsIscsi) DeepCopyInto(out *OntapStorageVirtualMachineSpecEndpointsIscsi) {
	*out = *in
	if in.DnsName != nil {
		in, out := &in.DnsName, &out.DnsName
		*out = new(string)
		**out = **in
	}
	if in.IpAddresses != nil {
		in, out := &in.IpAddresses, &out.IpAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OntapStorageVirtualMachineSpecEndpointsIscsi.
func (in *OntapStorageVirtualMachineSpecEndpointsIscsi) DeepCopy() *OntapStorageVirtualMachineSpecEndpointsIscsi {
	if in == nil {
		return nil
	}
	out := new(OntapStorageVirtualMachineSpecEndpointsIscsi)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OntapStorageVirtualMachineSpecEndpointsManagement) DeepCopyInto(out *OntapStorageVirtualMachineSpecEndpointsManagement) {
	*out = *in
	if in.DnsName != nil {
		in, out := &in.DnsName, &out.DnsName
		*out = new(string)
		**out = **in
	}
	if in.IpAddresses != nil {
		in, out := &in.IpAddresses, &out.IpAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OntapStorageVirtualMachineSpecEndpointsManagement.
func (in *OntapStorageVirtualMachineSpecEndpointsManagement) DeepCopy() *OntapStorageVirtualMachineSpecEndpointsManagement {
	if in == nil {
		return nil
	}
	out := new(OntapStorageVirtualMachineSpecEndpointsManagement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OntapStorageVirtualMachineSpecEndpointsNfs) DeepCopyInto(out *OntapStorageVirtualMachineSpecEndpointsNfs) {
	*out = *in
	if in.DnsName != nil {
		in, out := &in.DnsName, &out.DnsName
		*out = new(string)
		**out = **in
	}
	if in.IpAddresses != nil {
		in, out := &in.IpAddresses, &out.IpAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OntapStorageVirtualMachineSpecEndpointsNfs.
func (in *OntapStorageVirtualMachineSpecEndpointsNfs) DeepCopy() *OntapStorageVirtualMachineSpecEndpointsNfs {
	if in == nil {
		return nil
	}
	out := new(OntapStorageVirtualMachineSpecEndpointsNfs)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OntapStorageVirtualMachineSpecEndpointsSmb) DeepCopyInto(out *OntapStorageVirtualMachineSpecEndpointsSmb) {
	*out = *in
	if in.DnsName != nil {
		in, out := &in.DnsName, &out.DnsName
		*out = new(string)
		**out = **in
	}
	if in.IpAddresses != nil {
		in, out := &in.IpAddresses, &out.IpAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OntapStorageVirtualMachineSpecEndpointsSmb.
func (in *OntapStorageVirtualMachineSpecEndpointsSmb) DeepCopy() *OntapStorageVirtualMachineSpecEndpointsSmb {
	if in == nil {
		return nil
	}
	out := new(OntapStorageVirtualMachineSpecEndpointsSmb)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OntapStorageVirtualMachineSpecResource) DeepCopyInto(out *OntapStorageVirtualMachineSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.ActiveDirectoryConfiguration != nil {
		in, out := &in.ActiveDirectoryConfiguration, &out.ActiveDirectoryConfiguration
		*out = new(OntapStorageVirtualMachineSpecActiveDirectoryConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Endpoints != nil {
		in, out := &in.Endpoints, &out.Endpoints
		*out = make([]OntapStorageVirtualMachineSpecEndpoints, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FileSystemID != nil {
		in, out := &in.FileSystemID, &out.FileSystemID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RootVolumeSecurityStyle != nil {
		in, out := &in.RootVolumeSecurityStyle, &out.RootVolumeSecurityStyle
		*out = new(string)
		**out = **in
	}
	if in.Subtype != nil {
		in, out := &in.Subtype, &out.Subtype
		*out = new(string)
		**out = **in
	}
	if in.SvmAdminPassword != nil {
		in, out := &in.SvmAdminPassword, &out.SvmAdminPassword
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Uuid != nil {
		in, out := &in.Uuid, &out.Uuid
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OntapStorageVirtualMachineSpecResource.
func (in *OntapStorageVirtualMachineSpecResource) DeepCopy() *OntapStorageVirtualMachineSpecResource {
	if in == nil {
		return nil
	}
	out := new(OntapStorageVirtualMachineSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OntapStorageVirtualMachineStatus) DeepCopyInto(out *OntapStorageVirtualMachineStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OntapStorageVirtualMachineStatus.
func (in *OntapStorageVirtualMachineStatus) DeepCopy() *OntapStorageVirtualMachineStatus {
	if in == nil {
		return nil
	}
	out := new(OntapStorageVirtualMachineStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OntapVolume) DeepCopyInto(out *OntapVolume) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OntapVolume.
func (in *OntapVolume) DeepCopy() *OntapVolume {
	if in == nil {
		return nil
	}
	out := new(OntapVolume)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OntapVolume) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OntapVolumeList) DeepCopyInto(out *OntapVolumeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]OntapVolume, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OntapVolumeList.
func (in *OntapVolumeList) DeepCopy() *OntapVolumeList {
	if in == nil {
		return nil
	}
	out := new(OntapVolumeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OntapVolumeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OntapVolumeSpec) DeepCopyInto(out *OntapVolumeSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(OntapVolumeSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OntapVolumeSpec.
func (in *OntapVolumeSpec) DeepCopy() *OntapVolumeSpec {
	if in == nil {
		return nil
	}
	out := new(OntapVolumeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OntapVolumeSpecResource) DeepCopyInto(out *OntapVolumeSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.FileSystemID != nil {
		in, out := &in.FileSystemID, &out.FileSystemID
		*out = new(string)
		**out = **in
	}
	if in.FlexcacheEndpointType != nil {
		in, out := &in.FlexcacheEndpointType, &out.FlexcacheEndpointType
		*out = new(string)
		**out = **in
	}
	if in.JunctionPath != nil {
		in, out := &in.JunctionPath, &out.JunctionPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OntapVolumeType != nil {
		in, out := &in.OntapVolumeType, &out.OntapVolumeType
		*out = new(string)
		**out = **in
	}
	if in.SecurityStyle != nil {
		in, out := &in.SecurityStyle, &out.SecurityStyle
		*out = new(string)
		**out = **in
	}
	if in.SizeInMegabytes != nil {
		in, out := &in.SizeInMegabytes, &out.SizeInMegabytes
		*out = new(int64)
		**out = **in
	}
	if in.StorageEfficiencyEnabled != nil {
		in, out := &in.StorageEfficiencyEnabled, &out.StorageEfficiencyEnabled
		*out = new(bool)
		**out = **in
	}
	if in.StorageVirtualMachineID != nil {
		in, out := &in.StorageVirtualMachineID, &out.StorageVirtualMachineID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.TieringPolicy != nil {
		in, out := &in.TieringPolicy, &out.TieringPolicy
		*out = new(OntapVolumeSpecTieringPolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.Uuid != nil {
		in, out := &in.Uuid, &out.Uuid
		*out = new(string)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OntapVolumeSpecResource.
func (in *OntapVolumeSpecResource) DeepCopy() *OntapVolumeSpecResource {
	if in == nil {
		return nil
	}
	out := new(OntapVolumeSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OntapVolumeSpecTieringPolicy) DeepCopyInto(out *OntapVolumeSpecTieringPolicy) {
	*out = *in
	if in.CoolingPeriod != nil {
		in, out := &in.CoolingPeriod, &out.CoolingPeriod
		*out = new(int64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OntapVolumeSpecTieringPolicy.
func (in *OntapVolumeSpecTieringPolicy) DeepCopy() *OntapVolumeSpecTieringPolicy {
	if in == nil {
		return nil
	}
	out := new(OntapVolumeSpecTieringPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OntapVolumeStatus) DeepCopyInto(out *OntapVolumeStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OntapVolumeStatus.
func (in *OntapVolumeStatus) DeepCopy() *OntapVolumeStatus {
	if in == nil {
		return nil
	}
	out := new(OntapVolumeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenzfsFileSystem) DeepCopyInto(out *OpenzfsFileSystem) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenzfsFileSystem.
func (in *OpenzfsFileSystem) DeepCopy() *OpenzfsFileSystem {
	if in == nil {
		return nil
	}
	out := new(OpenzfsFileSystem)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OpenzfsFileSystem) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenzfsFileSystemList) DeepCopyInto(out *OpenzfsFileSystemList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]OpenzfsFileSystem, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenzfsFileSystemList.
func (in *OpenzfsFileSystemList) DeepCopy() *OpenzfsFileSystemList {
	if in == nil {
		return nil
	}
	out := new(OpenzfsFileSystemList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OpenzfsFileSystemList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenzfsFileSystemSpec) DeepCopyInto(out *OpenzfsFileSystemSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(OpenzfsFileSystemSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenzfsFileSystemSpec.
func (in *OpenzfsFileSystemSpec) DeepCopy() *OpenzfsFileSystemSpec {
	if in == nil {
		return nil
	}
	out := new(OpenzfsFileSystemSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenzfsFileSystemSpecDiskIopsConfiguration) DeepCopyInto(out *OpenzfsFileSystemSpecDiskIopsConfiguration) {
	*out = *in
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(int64)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenzfsFileSystemSpecDiskIopsConfiguration.
func (in *OpenzfsFileSystemSpecDiskIopsConfiguration) DeepCopy() *OpenzfsFileSystemSpecDiskIopsConfiguration {
	if in == nil {
		return nil
	}
	out := new(OpenzfsFileSystemSpecDiskIopsConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenzfsFileSystemSpecResource) DeepCopyInto(out *OpenzfsFileSystemSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AutomaticBackupRetentionDays != nil {
		in, out := &in.AutomaticBackupRetentionDays, &out.AutomaticBackupRetentionDays
		*out = new(int64)
		**out = **in
	}
	if in.BackupID != nil {
		in, out := &in.BackupID, &out.BackupID
		*out = new(string)
		**out = **in
	}
	if in.CopyTagsToBackups != nil {
		in, out := &in.CopyTagsToBackups, &out.CopyTagsToBackups
		*out = new(bool)
		**out = **in
	}
	if in.CopyTagsToVolumes != nil {
		in, out := &in.CopyTagsToVolumes, &out.CopyTagsToVolumes
		*out = new(bool)
		**out = **in
	}
	if in.DailyAutomaticBackupStartTime != nil {
		in, out := &in.DailyAutomaticBackupStartTime, &out.DailyAutomaticBackupStartTime
		*out = new(string)
		**out = **in
	}
	if in.DeploymentType != nil {
		in, out := &in.DeploymentType, &out.DeploymentType
		*out = new(string)
		**out = **in
	}
	if in.DiskIopsConfiguration != nil {
		in, out := &in.DiskIopsConfiguration, &out.DiskIopsConfiguration
		*out = new(OpenzfsFileSystemSpecDiskIopsConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.DnsName != nil {
		in, out := &in.DnsName, &out.DnsName
		*out = new(string)
		**out = **in
	}
	if in.KmsKeyID != nil {
		in, out := &in.KmsKeyID, &out.KmsKeyID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceIDS != nil {
		in, out := &in.NetworkInterfaceIDS, &out.NetworkInterfaceIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.OwnerID != nil {
		in, out := &in.OwnerID, &out.OwnerID
		*out = new(string)
		**out = **in
	}
	if in.RootVolumeConfiguration != nil {
		in, out := &in.RootVolumeConfiguration, &out.RootVolumeConfiguration
		*out = new(OpenzfsFileSystemSpecRootVolumeConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.RootVolumeID != nil {
		in, out := &in.RootVolumeID, &out.RootVolumeID
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupIDS != nil {
		in, out := &in.SecurityGroupIDS, &out.SecurityGroupIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.StorageCapacity != nil {
		in, out := &in.StorageCapacity, &out.StorageCapacity
		*out = new(int64)
		**out = **in
	}
	if in.StorageType != nil {
		in, out := &in.StorageType, &out.StorageType
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDS != nil {
		in, out := &in.SubnetIDS, &out.SubnetIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.ThroughputCapacity != nil {
		in, out := &in.ThroughputCapacity, &out.ThroughputCapacity
		*out = new(int64)
		**out = **in
	}
	if in.VpcID != nil {
		in, out := &in.VpcID, &out.VpcID
		*out = new(string)
		**out = **in
	}
	if in.WeeklyMaintenanceStartTime != nil {
		in, out := &in.WeeklyMaintenanceStartTime, &out.WeeklyMaintenanceStartTime
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenzfsFileSystemSpecResource.
func (in *OpenzfsFileSystemSpecResource) DeepCopy() *OpenzfsFileSystemSpecResource {
	if in == nil {
		return nil
	}
	out := new(OpenzfsFileSystemSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenzfsFileSystemSpecRootVolumeConfiguration) DeepCopyInto(out *OpenzfsFileSystemSpecRootVolumeConfiguration) {
	*out = *in
	if in.CopyTagsToSnapshots != nil {
		in, out := &in.CopyTagsToSnapshots, &out.CopyTagsToSnapshots
		*out = new(bool)
		**out = **in
	}
	if in.DataCompressionType != nil {
		in, out := &in.DataCompressionType, &out.DataCompressionType
		*out = new(string)
		**out = **in
	}
	if in.NfsExports != nil {
		in, out := &in.NfsExports, &out.NfsExports
		*out = new(OpenzfsFileSystemSpecRootVolumeConfigurationNfsExports)
		(*in).DeepCopyInto(*out)
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.UserAndGroupQuotas != nil {
		in, out := &in.UserAndGroupQuotas, &out.UserAndGroupQuotas
		*out = make([]OpenzfsFileSystemSpecRootVolumeConfigurationUserAndGroupQuotas, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenzfsFileSystemSpecRootVolumeConfiguration.
func (in *OpenzfsFileSystemSpecRootVolumeConfiguration) DeepCopy() *OpenzfsFileSystemSpecRootVolumeConfiguration {
	if in == nil {
		return nil
	}
	out := new(OpenzfsFileSystemSpecRootVolumeConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenzfsFileSystemSpecRootVolumeConfigurationNfsExports) DeepCopyInto(out *OpenzfsFileSystemSpecRootVolumeConfigurationNfsExports) {
	*out = *in
	if in.ClientConfigurations != nil {
		in, out := &in.ClientConfigurations, &out.ClientConfigurations
		*out = make([]OpenzfsFileSystemSpecRootVolumeConfigurationNfsExportsClientConfigurations, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenzfsFileSystemSpecRootVolumeConfigurationNfsExports.
func (in *OpenzfsFileSystemSpecRootVolumeConfigurationNfsExports) DeepCopy() *OpenzfsFileSystemSpecRootVolumeConfigurationNfsExports {
	if in == nil {
		return nil
	}
	out := new(OpenzfsFileSystemSpecRootVolumeConfigurationNfsExports)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenzfsFileSystemSpecRootVolumeConfigurationNfsExportsClientConfigurations) DeepCopyInto(out *OpenzfsFileSystemSpecRootVolumeConfigurationNfsExportsClientConfigurations) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenzfsFileSystemSpecRootVolumeConfigurationNfsExportsClientConfigurations.
func (in *OpenzfsFileSystemSpecRootVolumeConfigurationNfsExportsClientConfigurations) DeepCopy() *OpenzfsFileSystemSpecRootVolumeConfigurationNfsExportsClientConfigurations {
	if in == nil {
		return nil
	}
	out := new(OpenzfsFileSystemSpecRootVolumeConfigurationNfsExportsClientConfigurations)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenzfsFileSystemSpecRootVolumeConfigurationUserAndGroupQuotas) DeepCopyInto(out *OpenzfsFileSystemSpecRootVolumeConfigurationUserAndGroupQuotas) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(int64)
		**out = **in
	}
	if in.StorageCapacityQuotaGib != nil {
		in, out := &in.StorageCapacityQuotaGib, &out.StorageCapacityQuotaGib
		*out = new(int64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenzfsFileSystemSpecRootVolumeConfigurationUserAndGroupQuotas.
func (in *OpenzfsFileSystemSpecRootVolumeConfigurationUserAndGroupQuotas) DeepCopy() *OpenzfsFileSystemSpecRootVolumeConfigurationUserAndGroupQuotas {
	if in == nil {
		return nil
	}
	out := new(OpenzfsFileSystemSpecRootVolumeConfigurationUserAndGroupQuotas)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenzfsFileSystemStatus) DeepCopyInto(out *OpenzfsFileSystemStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenzfsFileSystemStatus.
func (in *OpenzfsFileSystemStatus) DeepCopy() *OpenzfsFileSystemStatus {
	if in == nil {
		return nil
	}
	out := new(OpenzfsFileSystemStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenzfsSnapshot) DeepCopyInto(out *OpenzfsSnapshot) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenzfsSnapshot.
func (in *OpenzfsSnapshot) DeepCopy() *OpenzfsSnapshot {
	if in == nil {
		return nil
	}
	out := new(OpenzfsSnapshot)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OpenzfsSnapshot) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenzfsSnapshotList) DeepCopyInto(out *OpenzfsSnapshotList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]OpenzfsSnapshot, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenzfsSnapshotList.
func (in *OpenzfsSnapshotList) DeepCopy() *OpenzfsSnapshotList {
	if in == nil {
		return nil
	}
	out := new(OpenzfsSnapshotList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OpenzfsSnapshotList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenzfsSnapshotSpec) DeepCopyInto(out *OpenzfsSnapshotSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(OpenzfsSnapshotSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenzfsSnapshotSpec.
func (in *OpenzfsSnapshotSpec) DeepCopy() *OpenzfsSnapshotSpec {
	if in == nil {
		return nil
	}
	out := new(OpenzfsSnapshotSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenzfsSnapshotSpecResource) DeepCopyInto(out *OpenzfsSnapshotSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenzfsSnapshotSpecResource.
func (in *OpenzfsSnapshotSpecResource) DeepCopy() *OpenzfsSnapshotSpecResource {
	if in == nil {
		return nil
	}
	out := new(OpenzfsSnapshotSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenzfsSnapshotStatus) DeepCopyInto(out *OpenzfsSnapshotStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenzfsSnapshotStatus.
func (in *OpenzfsSnapshotStatus) DeepCopy() *OpenzfsSnapshotStatus {
	if in == nil {
		return nil
	}
	out := new(OpenzfsSnapshotStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenzfsVolume) DeepCopyInto(out *OpenzfsVolume) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenzfsVolume.
func (in *OpenzfsVolume) DeepCopy() *OpenzfsVolume {
	if in == nil {
		return nil
	}
	out := new(OpenzfsVolume)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OpenzfsVolume) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenzfsVolumeList) DeepCopyInto(out *OpenzfsVolumeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]OpenzfsVolume, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenzfsVolumeList.
func (in *OpenzfsVolumeList) DeepCopy() *OpenzfsVolumeList {
	if in == nil {
		return nil
	}
	out := new(OpenzfsVolumeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OpenzfsVolumeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenzfsVolumeSpec) DeepCopyInto(out *OpenzfsVolumeSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(OpenzfsVolumeSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenzfsVolumeSpec.
func (in *OpenzfsVolumeSpec) DeepCopy() *OpenzfsVolumeSpec {
	if in == nil {
		return nil
	}
	out := new(OpenzfsVolumeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenzfsVolumeSpecNfsExports) DeepCopyInto(out *OpenzfsVolumeSpecNfsExports) {
	*out = *in
	if in.ClientConfigurations != nil {
		in, out := &in.ClientConfigurations, &out.ClientConfigurations
		*out = make([]OpenzfsVolumeSpecNfsExportsClientConfigurations, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenzfsVolumeSpecNfsExports.
func (in *OpenzfsVolumeSpecNfsExports) DeepCopy() *OpenzfsVolumeSpecNfsExports {
	if in == nil {
		return nil
	}
	out := new(OpenzfsVolumeSpecNfsExports)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenzfsVolumeSpecNfsExportsClientConfigurations) DeepCopyInto(out *OpenzfsVolumeSpecNfsExportsClientConfigurations) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenzfsVolumeSpecNfsExportsClientConfigurations.
func (in *OpenzfsVolumeSpecNfsExportsClientConfigurations) DeepCopy() *OpenzfsVolumeSpecNfsExportsClientConfigurations {
	if in == nil {
		return nil
	}
	out := new(OpenzfsVolumeSpecNfsExportsClientConfigurations)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenzfsVolumeSpecOriginSnapshot) DeepCopyInto(out *OpenzfsVolumeSpecOriginSnapshot) {
	*out = *in
	if in.CopyStrategy != nil {
		in, out := &in.CopyStrategy, &out.CopyStrategy
		*out = new(string)
		**out = **in
	}
	if in.SnapshotArn != nil {
		in, out := &in.SnapshotArn, &out.SnapshotArn
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenzfsVolumeSpecOriginSnapshot.
func (in *OpenzfsVolumeSpecOriginSnapshot) DeepCopy() *OpenzfsVolumeSpecOriginSnapshot {
	if in == nil {
		return nil
	}
	out := new(OpenzfsVolumeSpecOriginSnapshot)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenzfsVolumeSpecResource) DeepCopyInto(out *OpenzfsVolumeSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.CopyTagsToSnapshots != nil {
		in, out := &in.CopyTagsToSnapshots, &out.CopyTagsToSnapshots
		*out = new(bool)
		**out = **in
	}
	if in.DataCompressionType != nil {
		in, out := &in.DataCompressionType, &out.DataCompressionType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NfsExports != nil {
		in, out := &in.NfsExports, &out.NfsExports
		*out = new(OpenzfsVolumeSpecNfsExports)
		(*in).DeepCopyInto(*out)
	}
	if in.OriginSnapshot != nil {
		in, out := &in.OriginSnapshot, &out.OriginSnapshot
		*out = new(OpenzfsVolumeSpecOriginSnapshot)
		(*in).DeepCopyInto(*out)
	}
	if in.ParentVolumeID != nil {
		in, out := &in.ParentVolumeID, &out.ParentVolumeID
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.StorageCapacityQuotaGib != nil {
		in, out := &in.StorageCapacityQuotaGib, &out.StorageCapacityQuotaGib
		*out = new(int64)
		**out = **in
	}
	if in.StorageCapacityReservationGib != nil {
		in, out := &in.StorageCapacityReservationGib, &out.StorageCapacityReservationGib
		*out = new(int64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.UserAndGroupQuotas != nil {
		in, out := &in.UserAndGroupQuotas, &out.UserAndGroupQuotas
		*out = make([]OpenzfsVolumeSpecUserAndGroupQuotas, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenzfsVolumeSpecResource.
func (in *OpenzfsVolumeSpecResource) DeepCopy() *OpenzfsVolumeSpecResource {
	if in == nil {
		return nil
	}
	out := new(OpenzfsVolumeSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenzfsVolumeSpecUserAndGroupQuotas) DeepCopyInto(out *OpenzfsVolumeSpecUserAndGroupQuotas) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(int64)
		**out = **in
	}
	if in.StorageCapacityQuotaGib != nil {
		in, out := &in.StorageCapacityQuotaGib, &out.StorageCapacityQuotaGib
		*out = new(int64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenzfsVolumeSpecUserAndGroupQuotas.
func (in *OpenzfsVolumeSpecUserAndGroupQuotas) DeepCopy() *OpenzfsVolumeSpecUserAndGroupQuotas {
	if in == nil {
		return nil
	}
	out := new(OpenzfsVolumeSpecUserAndGroupQuotas)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenzfsVolumeStatus) DeepCopyInto(out *OpenzfsVolumeStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenzfsVolumeStatus.
func (in *OpenzfsVolumeStatus) DeepCopy() *OpenzfsVolumeStatus {
	if in == nil {
		return nil
	}
	out := new(OpenzfsVolumeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFileSystem) DeepCopyInto(out *WindowsFileSystem) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFileSystem.
func (in *WindowsFileSystem) DeepCopy() *WindowsFileSystem {
	if in == nil {
		return nil
	}
	out := new(WindowsFileSystem)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WindowsFileSystem) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFileSystemList) DeepCopyInto(out *WindowsFileSystemList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]WindowsFileSystem, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFileSystemList.
func (in *WindowsFileSystemList) DeepCopy() *WindowsFileSystemList {
	if in == nil {
		return nil
	}
	out := new(WindowsFileSystemList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WindowsFileSystemList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFileSystemSpec) DeepCopyInto(out *WindowsFileSystemSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(WindowsFileSystemSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFileSystemSpec.
func (in *WindowsFileSystemSpec) DeepCopy() *WindowsFileSystemSpec {
	if in == nil {
		return nil
	}
	out := new(WindowsFileSystemSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFileSystemSpecAuditLogConfiguration) DeepCopyInto(out *WindowsFileSystemSpecAuditLogConfiguration) {
	*out = *in
	if in.AuditLogDestination != nil {
		in, out := &in.AuditLogDestination, &out.AuditLogDestination
		*out = new(string)
		**out = **in
	}
	if in.FileAccessAuditLogLevel != nil {
		in, out := &in.FileAccessAuditLogLevel, &out.FileAccessAuditLogLevel
		*out = new(string)
		**out = **in
	}
	if in.FileShareAccessAuditLogLevel != nil {
		in, out := &in.FileShareAccessAuditLogLevel, &out.FileShareAccessAuditLogLevel
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFileSystemSpecAuditLogConfiguration.
func (in *WindowsFileSystemSpecAuditLogConfiguration) DeepCopy() *WindowsFileSystemSpecAuditLogConfiguration {
	if in == nil {
		return nil
	}
	out := new(WindowsFileSystemSpecAuditLogConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFileSystemSpecResource) DeepCopyInto(out *WindowsFileSystemSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.ActiveDirectoryID != nil {
		in, out := &in.ActiveDirectoryID, &out.ActiveDirectoryID
		*out = new(string)
		**out = **in
	}
	if in.Aliases != nil {
		in, out := &in.Aliases, &out.Aliases
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AuditLogConfiguration != nil {
		in, out := &in.AuditLogConfiguration, &out.AuditLogConfiguration
		*out = new(WindowsFileSystemSpecAuditLogConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.AutomaticBackupRetentionDays != nil {
		in, out := &in.AutomaticBackupRetentionDays, &out.AutomaticBackupRetentionDays
		*out = new(int64)
		**out = **in
	}
	if in.BackupID != nil {
		in, out := &in.BackupID, &out.BackupID
		*out = new(string)
		**out = **in
	}
	if in.CopyTagsToBackups != nil {
		in, out := &in.CopyTagsToBackups, &out.CopyTagsToBackups
		*out = new(bool)
		**out = **in
	}
	if in.DailyAutomaticBackupStartTime != nil {
		in, out := &in.DailyAutomaticBackupStartTime, &out.DailyAutomaticBackupStartTime
		*out = new(string)
		**out = **in
	}
	if in.DeploymentType != nil {
		in, out := &in.DeploymentType, &out.DeploymentType
		*out = new(string)
		**out = **in
	}
	if in.DnsName != nil {
		in, out := &in.DnsName, &out.DnsName
		*out = new(string)
		**out = **in
	}
	if in.KmsKeyID != nil {
		in, out := &in.KmsKeyID, &out.KmsKeyID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceIDS != nil {
		in, out := &in.NetworkInterfaceIDS, &out.NetworkInterfaceIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.OwnerID != nil {
		in, out := &in.OwnerID, &out.OwnerID
		*out = new(string)
		**out = **in
	}
	if in.PreferredFileServerIP != nil {
		in, out := &in.PreferredFileServerIP, &out.PreferredFileServerIP
		*out = new(string)
		**out = **in
	}
	if in.PreferredSubnetID != nil {
		in, out := &in.PreferredSubnetID, &out.PreferredSubnetID
		*out = new(string)
		**out = **in
	}
	if in.RemoteAdministrationEndpoint != nil {
		in, out := &in.RemoteAdministrationEndpoint, &out.RemoteAdministrationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupIDS != nil {
		in, out := &in.SecurityGroupIDS, &out.SecurityGroupIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SelfManagedActiveDirectory != nil {
		in, out := &in.SelfManagedActiveDirectory, &out.SelfManagedActiveDirectory
		*out = new(WindowsFileSystemSpecSelfManagedActiveDirectory)
		(*in).DeepCopyInto(*out)
	}
	if in.SkipFinalBackup != nil {
		in, out := &in.SkipFinalBackup, &out.SkipFinalBackup
		*out = new(bool)
		**out = **in
	}
	if in.StorageCapacity != nil {
		in, out := &in.StorageCapacity, &out.StorageCapacity
		*out = new(int64)
		**out = **in
	}
	if in.StorageType != nil {
		in, out := &in.StorageType, &out.StorageType
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDS != nil {
		in, out := &in.SubnetIDS, &out.SubnetIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.ThroughputCapacity != nil {
		in, out := &in.ThroughputCapacity, &out.ThroughputCapacity
		*out = new(int64)
		**out = **in
	}
	if in.VpcID != nil {
		in, out := &in.VpcID, &out.VpcID
		*out = new(string)
		**out = **in
	}
	if in.WeeklyMaintenanceStartTime != nil {
		in, out := &in.WeeklyMaintenanceStartTime, &out.WeeklyMaintenanceStartTime
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFileSystemSpecResource.
func (in *WindowsFileSystemSpecResource) DeepCopy() *WindowsFileSystemSpecResource {
	if in == nil {
		return nil
	}
	out := new(WindowsFileSystemSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFileSystemSpecSelfManagedActiveDirectory) DeepCopyInto(out *WindowsFileSystemSpecSelfManagedActiveDirectory) {
	*out = *in
	if in.DnsIPS != nil {
		in, out := &in.DnsIPS, &out.DnsIPS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.FileSystemAdministratorsGroup != nil {
		in, out := &in.FileSystemAdministratorsGroup, &out.FileSystemAdministratorsGroup
		*out = new(string)
		**out = **in
	}
	if in.OrganizationalUnitDistinguishedName != nil {
		in, out := &in.OrganizationalUnitDistinguishedName, &out.OrganizationalUnitDistinguishedName
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFileSystemSpecSelfManagedActiveDirectory.
func (in *WindowsFileSystemSpecSelfManagedActiveDirectory) DeepCopy() *WindowsFileSystemSpecSelfManagedActiveDirectory {
	if in == nil {
		return nil
	}
	out := new(WindowsFileSystemSpecSelfManagedActiveDirectory)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFileSystemStatus) DeepCopyInto(out *WindowsFileSystemStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFileSystemStatus.
func (in *WindowsFileSystemStatus) DeepCopy() *WindowsFileSystemStatus {
	if in == nil {
		return nil
	}
	out := new(WindowsFileSystemStatus)
	in.DeepCopyInto(out)
	return out
}
