/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type OntapVolume struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              OntapVolumeSpec   `json:"spec,omitempty"`
	Status            OntapVolumeStatus `json:"status,omitempty"`
}

type OntapVolumeSpecTieringPolicy struct {
	// +optional
	CoolingPeriod *int64 `json:"coolingPeriod,omitempty" tf:"cooling_period"`
	// +optional
	Name *string `json:"name,omitempty" tf:"name"`
}

type OntapVolumeSpec struct {
	State *OntapVolumeSpecResource `json:"state,omitempty" tf:"-"`

	Resource OntapVolumeSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type OntapVolumeSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	Arn *string `json:"arn,omitempty" tf:"arn"`
	// +optional
	FileSystemID *string `json:"fileSystemID,omitempty" tf:"file_system_id"`
	// +optional
	FlexcacheEndpointType *string `json:"flexcacheEndpointType,omitempty" tf:"flexcache_endpoint_type"`
	JunctionPath          *string `json:"junctionPath" tf:"junction_path"`
	Name                  *string `json:"name" tf:"name"`
	// +optional
	OntapVolumeType *string `json:"ontapVolumeType,omitempty" tf:"ontap_volume_type"`
	// +optional
	SecurityStyle            *string `json:"securityStyle,omitempty" tf:"security_style"`
	SizeInMegabytes          *int64  `json:"sizeInMegabytes" tf:"size_in_megabytes"`
	StorageEfficiencyEnabled *bool   `json:"storageEfficiencyEnabled" tf:"storage_efficiency_enabled"`
	StorageVirtualMachineID  *string `json:"storageVirtualMachineID" tf:"storage_virtual_machine_id"`
	// +optional
	Tags *map[string]string `json:"tags,omitempty" tf:"tags"`
	// +optional
	TagsAll *map[string]string `json:"tagsAll,omitempty" tf:"tags_all"`
	// +optional
	TieringPolicy *OntapVolumeSpecTieringPolicy `json:"tieringPolicy,omitempty" tf:"tiering_policy"`
	// +optional
	Uuid *string `json:"uuid,omitempty" tf:"uuid"`
	// +optional
	VolumeType *string `json:"volumeType,omitempty" tf:"volume_type"`
}

type OntapVolumeStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// OntapVolumeList is a list of OntapVolumes
type OntapVolumeList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of OntapVolume CRD objects
	Items []OntapVolume `json:"items,omitempty"`
}
