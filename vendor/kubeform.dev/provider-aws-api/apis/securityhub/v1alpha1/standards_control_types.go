/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type StandardsControl struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              StandardsControlSpec   `json:"spec,omitempty"`
	Status            StandardsControlStatus `json:"status,omitempty"`
}

type StandardsControlSpec struct {
	State *StandardsControlSpecResource `json:"state,omitempty" tf:"-"`

	Resource StandardsControlSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type StandardsControlSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	ControlID     *string `json:"controlID,omitempty" tf:"control_id"`
	ControlStatus *string `json:"controlStatus" tf:"control_status"`
	// +optional
	ControlStatusUpdatedAt *string `json:"controlStatusUpdatedAt,omitempty" tf:"control_status_updated_at"`
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// +optional
	DisabledReason *string `json:"disabledReason,omitempty" tf:"disabled_reason"`
	// +optional
	RelatedRequirements []string `json:"relatedRequirements,omitempty" tf:"related_requirements"`
	// +optional
	RemediationURL *string `json:"remediationURL,omitempty" tf:"remediation_url"`
	// +optional
	SeverityRating      *string `json:"severityRating,omitempty" tf:"severity_rating"`
	StandardsControlArn *string `json:"standardsControlArn" tf:"standards_control_arn"`
	// +optional
	Title *string `json:"title,omitempty" tf:"title"`
}

type StandardsControlStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// StandardsControlList is a list of StandardsControls
type StandardsControlList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of StandardsControl CRD objects
	Items []StandardsControl `json:"items,omitempty"`
}
