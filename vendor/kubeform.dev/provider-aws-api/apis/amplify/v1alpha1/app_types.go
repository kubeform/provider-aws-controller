/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type App struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AppSpec   `json:"spec,omitempty"`
	Status            AppStatus `json:"status,omitempty"`
}

type AppSpecAutoBranchCreationConfig struct {
	// +optional
	BasicAuthCredentials *string `json:"-" sensitive:"true" tf:"basic_auth_credentials"`
	// +optional
	BuildSpec *string `json:"buildSpec,omitempty" tf:"build_spec"`
	// +optional
	EnableAutoBuild *bool `json:"enableAutoBuild,omitempty" tf:"enable_auto_build"`
	// +optional
	EnableBasicAuth *bool `json:"enableBasicAuth,omitempty" tf:"enable_basic_auth"`
	// +optional
	EnablePerformanceMode *bool `json:"enablePerformanceMode,omitempty" tf:"enable_performance_mode"`
	// +optional
	EnablePullRequestPreview *bool `json:"enablePullRequestPreview,omitempty" tf:"enable_pull_request_preview"`
	// +optional
	EnvironmentVariables *map[string]string `json:"environmentVariables,omitempty" tf:"environment_variables"`
	// +optional
	Framework *string `json:"framework,omitempty" tf:"framework"`
	// +optional
	PullRequestEnvironmentName *string `json:"pullRequestEnvironmentName,omitempty" tf:"pull_request_environment_name"`
	// +optional
	Stage *string `json:"stage,omitempty" tf:"stage"`
}

type AppSpecCustomRule struct {
	// +optional
	Condition *string `json:"condition,omitempty" tf:"condition"`
	Source    *string `json:"source" tf:"source"`
	// +optional
	Status *string `json:"status,omitempty" tf:"status"`
	Target *string `json:"target" tf:"target"`
}

type AppSpecProductionBranch struct {
	// +optional
	BranchName *string `json:"branchName,omitempty" tf:"branch_name"`
	// +optional
	LastDeployTime *string `json:"lastDeployTime,omitempty" tf:"last_deploy_time"`
	// +optional
	Status *string `json:"status,omitempty" tf:"status"`
	// +optional
	ThumbnailURL *string `json:"thumbnailURL,omitempty" tf:"thumbnail_url"`
}

type AppSpec struct {
	State *AppSpecResource `json:"state,omitempty" tf:"-"`

	Resource AppSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type AppSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	AccessToken *string `json:"-" sensitive:"true" tf:"access_token"`
	// +optional
	Arn *string `json:"arn,omitempty" tf:"arn"`
	// +optional
	AutoBranchCreationConfig *AppSpecAutoBranchCreationConfig `json:"autoBranchCreationConfig,omitempty" tf:"auto_branch_creation_config"`
	// +optional
	AutoBranchCreationPatterns []string `json:"autoBranchCreationPatterns,omitempty" tf:"auto_branch_creation_patterns"`
	// +optional
	BasicAuthCredentials *string `json:"-" sensitive:"true" tf:"basic_auth_credentials"`
	// +optional
	BuildSpec *string `json:"buildSpec,omitempty" tf:"build_spec"`
	// +optional
	CustomRule []AppSpecCustomRule `json:"customRule,omitempty" tf:"custom_rule"`
	// +optional
	DefaultDomain *string `json:"defaultDomain,omitempty" tf:"default_domain"`
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// +optional
	EnableAutoBranchCreation *bool `json:"enableAutoBranchCreation,omitempty" tf:"enable_auto_branch_creation"`
	// +optional
	EnableBasicAuth *bool `json:"enableBasicAuth,omitempty" tf:"enable_basic_auth"`
	// +optional
	EnableBranchAutoBuild *bool `json:"enableBranchAutoBuild,omitempty" tf:"enable_branch_auto_build"`
	// +optional
	EnableBranchAutoDeletion *bool `json:"enableBranchAutoDeletion,omitempty" tf:"enable_branch_auto_deletion"`
	// +optional
	EnvironmentVariables *map[string]string `json:"environmentVariables,omitempty" tf:"environment_variables"`
	// +optional
	IamServiceRoleArn *string `json:"iamServiceRoleArn,omitempty" tf:"iam_service_role_arn"`
	Name              *string `json:"name" tf:"name"`
	// +optional
	OauthToken *string `json:"-" sensitive:"true" tf:"oauth_token"`
	// +optional
	Platform *string `json:"platform,omitempty" tf:"platform"`
	// +optional
	ProductionBranch []AppSpecProductionBranch `json:"productionBranch,omitempty" tf:"production_branch"`
	// +optional
	Repository *string `json:"repository,omitempty" tf:"repository"`
	// +optional
	Tags *map[string]string `json:"tags,omitempty" tf:"tags"`
	// +optional
	TagsAll *map[string]string `json:"tagsAll,omitempty" tf:"tags_all"`
}

type AppStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// AppList is a list of Apps
type AppList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of App CRD objects
	Items []App `json:"items,omitempty"`
}
