/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type FieldLevelEncryptionProfile struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              FieldLevelEncryptionProfileSpec   `json:"spec,omitempty"`
	Status            FieldLevelEncryptionProfileStatus `json:"status,omitempty"`
}

type FieldLevelEncryptionProfileSpecEncryptionEntitiesItemsFieldPatterns struct {
	// +optional
	Items []string `json:"items,omitempty" tf:"items"`
}

type FieldLevelEncryptionProfileSpecEncryptionEntitiesItems struct {
	FieldPatterns *FieldLevelEncryptionProfileSpecEncryptionEntitiesItemsFieldPatterns `json:"fieldPatterns" tf:"field_patterns"`
	ProviderID    *string                                                              `json:"providerID" tf:"provider_id"`
	PublicKeyID   *string                                                              `json:"publicKeyID" tf:"public_key_id"`
}

type FieldLevelEncryptionProfileSpecEncryptionEntities struct {
	// +optional
	Items []FieldLevelEncryptionProfileSpecEncryptionEntitiesItems `json:"items,omitempty" tf:"items"`
}

type FieldLevelEncryptionProfileSpec struct {
	State *FieldLevelEncryptionProfileSpecResource `json:"state,omitempty" tf:"-"`

	Resource FieldLevelEncryptionProfileSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type FieldLevelEncryptionProfileSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	CallerReference *string `json:"callerReference,omitempty" tf:"caller_reference"`
	// +optional
	Comment            *string                                            `json:"comment,omitempty" tf:"comment"`
	EncryptionEntities *FieldLevelEncryptionProfileSpecEncryptionEntities `json:"encryptionEntities" tf:"encryption_entities"`
	// +optional
	Etag *string `json:"etag,omitempty" tf:"etag"`
	Name *string `json:"name" tf:"name"`
}

type FieldLevelEncryptionProfileStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// FieldLevelEncryptionProfileList is a list of FieldLevelEncryptionProfiles
type FieldLevelEncryptionProfileList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of FieldLevelEncryptionProfile CRD objects
	Items []FieldLevelEncryptionProfile `json:"items,omitempty"`
}
