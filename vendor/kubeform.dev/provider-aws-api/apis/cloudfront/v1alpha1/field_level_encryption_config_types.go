/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type FieldLevelEncryptionConfig struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              FieldLevelEncryptionConfigSpec   `json:"spec,omitempty"`
	Status            FieldLevelEncryptionConfigStatus `json:"status,omitempty"`
}

type FieldLevelEncryptionConfigSpecContentTypeProfileConfigContentTypeProfilesItems struct {
	ContentType *string `json:"contentType" tf:"content_type"`
	Format      *string `json:"format" tf:"format"`
	// +optional
	ProfileID *string `json:"profileID,omitempty" tf:"profile_id"`
}

type FieldLevelEncryptionConfigSpecContentTypeProfileConfigContentTypeProfiles struct {
	Items []FieldLevelEncryptionConfigSpecContentTypeProfileConfigContentTypeProfilesItems `json:"items" tf:"items"`
}

type FieldLevelEncryptionConfigSpecContentTypeProfileConfig struct {
	ContentTypeProfiles             *FieldLevelEncryptionConfigSpecContentTypeProfileConfigContentTypeProfiles `json:"contentTypeProfiles" tf:"content_type_profiles"`
	ForwardWhenContentTypeIsUnknown *bool                                                                      `json:"forwardWhenContentTypeIsUnknown" tf:"forward_when_content_type_is_unknown"`
}

type FieldLevelEncryptionConfigSpecQueryArgProfileConfigQueryArgProfilesItems struct {
	ProfileID *string `json:"profileID" tf:"profile_id"`
	QueryArg  *string `json:"queryArg" tf:"query_arg"`
}

type FieldLevelEncryptionConfigSpecQueryArgProfileConfigQueryArgProfiles struct {
	// +optional
	Items []FieldLevelEncryptionConfigSpecQueryArgProfileConfigQueryArgProfilesItems `json:"items,omitempty" tf:"items"`
}

type FieldLevelEncryptionConfigSpecQueryArgProfileConfig struct {
	ForwardWhenQueryArgProfileIsUnknown *bool `json:"forwardWhenQueryArgProfileIsUnknown" tf:"forward_when_query_arg_profile_is_unknown"`
	// +optional
	QueryArgProfiles *FieldLevelEncryptionConfigSpecQueryArgProfileConfigQueryArgProfiles `json:"queryArgProfiles,omitempty" tf:"query_arg_profiles"`
}

type FieldLevelEncryptionConfigSpec struct {
	State *FieldLevelEncryptionConfigSpecResource `json:"state,omitempty" tf:"-"`

	Resource FieldLevelEncryptionConfigSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type FieldLevelEncryptionConfigSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	CallerReference *string `json:"callerReference,omitempty" tf:"caller_reference"`
	// +optional
	Comment                  *string                                                 `json:"comment,omitempty" tf:"comment"`
	ContentTypeProfileConfig *FieldLevelEncryptionConfigSpecContentTypeProfileConfig `json:"contentTypeProfileConfig" tf:"content_type_profile_config"`
	// +optional
	Etag                  *string                                              `json:"etag,omitempty" tf:"etag"`
	QueryArgProfileConfig *FieldLevelEncryptionConfigSpecQueryArgProfileConfig `json:"queryArgProfileConfig" tf:"query_arg_profile_config"`
}

type FieldLevelEncryptionConfigStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// FieldLevelEncryptionConfigList is a list of FieldLevelEncryptionConfigs
type FieldLevelEncryptionConfigList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of FieldLevelEncryptionConfig CRD objects
	Items []FieldLevelEncryptionConfig `json:"items,omitempty"`
}
