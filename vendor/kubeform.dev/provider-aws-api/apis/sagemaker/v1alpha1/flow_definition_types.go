/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type FlowDefinition struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              FlowDefinitionSpec   `json:"spec,omitempty"`
	Status            FlowDefinitionStatus `json:"status,omitempty"`
}

type FlowDefinitionSpecHumanLoopActivationConfigHumanLoopActivationConditionsConfig struct {
	HumanLoopActivationConditions *string `json:"humanLoopActivationConditions" tf:"human_loop_activation_conditions"`
}

type FlowDefinitionSpecHumanLoopActivationConfig struct {
	// +optional
	HumanLoopActivationConditionsConfig *FlowDefinitionSpecHumanLoopActivationConfigHumanLoopActivationConditionsConfig `json:"humanLoopActivationConditionsConfig,omitempty" tf:"human_loop_activation_conditions_config"`
}

type FlowDefinitionSpecHumanLoopConfigPublicWorkforceTaskPriceAmountInUsd struct {
	// +optional
	Cents *int64 `json:"cents,omitempty" tf:"cents"`
	// +optional
	Dollars *int64 `json:"dollars,omitempty" tf:"dollars"`
	// +optional
	TenthFractionsOfACent *int64 `json:"tenthFractionsOfACent,omitempty" tf:"tenth_fractions_of_a_cent"`
}

type FlowDefinitionSpecHumanLoopConfigPublicWorkforceTaskPrice struct {
	// +optional
	AmountInUsd *FlowDefinitionSpecHumanLoopConfigPublicWorkforceTaskPriceAmountInUsd `json:"amountInUsd,omitempty" tf:"amount_in_usd"`
}

type FlowDefinitionSpecHumanLoopConfig struct {
	HumanTaskUiArn *string `json:"humanTaskUiArn" tf:"human_task_ui_arn"`
	// +optional
	PublicWorkforceTaskPrice *FlowDefinitionSpecHumanLoopConfigPublicWorkforceTaskPrice `json:"publicWorkforceTaskPrice,omitempty" tf:"public_workforce_task_price"`
	// +optional
	TaskAvailabilityLifetimeInSeconds *int64  `json:"taskAvailabilityLifetimeInSeconds,omitempty" tf:"task_availability_lifetime_in_seconds"`
	TaskCount                         *int64  `json:"taskCount" tf:"task_count"`
	TaskDescription                   *string `json:"taskDescription" tf:"task_description"`
	// +optional
	// +kubebuilder:validation:MaxItems=5
	// +kubebuilder:validation:MinItems=1
	TaskKeywords []string `json:"taskKeywords,omitempty" tf:"task_keywords"`
	// +optional
	TaskTimeLimitInSeconds *int64  `json:"taskTimeLimitInSeconds,omitempty" tf:"task_time_limit_in_seconds"`
	TaskTitle              *string `json:"taskTitle" tf:"task_title"`
	WorkteamArn            *string `json:"workteamArn" tf:"workteam_arn"`
}

type FlowDefinitionSpecHumanLoopRequestSource struct {
	AwsManagedHumanLoopRequestSource *string `json:"awsManagedHumanLoopRequestSource" tf:"aws_managed_human_loop_request_source"`
}

type FlowDefinitionSpecOutputConfig struct {
	// +optional
	KmsKeyID     *string `json:"kmsKeyID,omitempty" tf:"kms_key_id"`
	S3OutputPath *string `json:"s3OutputPath" tf:"s3_output_path"`
}

type FlowDefinitionSpec struct {
	State *FlowDefinitionSpecResource `json:"state,omitempty" tf:"-"`

	Resource FlowDefinitionSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type FlowDefinitionSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	Arn                *string `json:"arn,omitempty" tf:"arn"`
	FlowDefinitionName *string `json:"flowDefinitionName" tf:"flow_definition_name"`
	// +optional
	HumanLoopActivationConfig *FlowDefinitionSpecHumanLoopActivationConfig `json:"humanLoopActivationConfig,omitempty" tf:"human_loop_activation_config"`
	HumanLoopConfig           *FlowDefinitionSpecHumanLoopConfig           `json:"humanLoopConfig" tf:"human_loop_config"`
	// +optional
	HumanLoopRequestSource *FlowDefinitionSpecHumanLoopRequestSource `json:"humanLoopRequestSource,omitempty" tf:"human_loop_request_source"`
	OutputConfig           *FlowDefinitionSpecOutputConfig           `json:"outputConfig" tf:"output_config"`
	RoleArn                *string                                   `json:"roleArn" tf:"role_arn"`
	// +optional
	Tags *map[string]string `json:"tags,omitempty" tf:"tags"`
	// +optional
	TagsAll *map[string]string `json:"tagsAll,omitempty" tf:"tags_all"`
}

type FlowDefinitionStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// FlowDefinitionList is a list of FlowDefinitions
type FlowDefinitionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of FlowDefinition CRD objects
	Items []FlowDefinition `json:"items,omitempty"`
}
