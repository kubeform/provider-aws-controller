/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Table struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              TableSpec   `json:"spec,omitempty"`
	Status            TableStatus `json:"status,omitempty"`
}

type TableSpecMagneticStoreWritePropertiesMagneticStoreRejectedDataLocationS3Configuration struct {
	// +optional
	BucketName *string `json:"bucketName,omitempty" tf:"bucket_name"`
	// +optional
	EncryptionOption *string `json:"encryptionOption,omitempty" tf:"encryption_option"`
	// +optional
	KmsKeyID *string `json:"kmsKeyID,omitempty" tf:"kms_key_id"`
	// +optional
	ObjectKeyPrefix *string `json:"objectKeyPrefix,omitempty" tf:"object_key_prefix"`
}

type TableSpecMagneticStoreWritePropertiesMagneticStoreRejectedDataLocation struct {
	// +optional
	S3Configuration *TableSpecMagneticStoreWritePropertiesMagneticStoreRejectedDataLocationS3Configuration `json:"s3Configuration,omitempty" tf:"s3_configuration"`
}

type TableSpecMagneticStoreWriteProperties struct {
	// +optional
	EnableMagneticStoreWrites *bool `json:"enableMagneticStoreWrites,omitempty" tf:"enable_magnetic_store_writes"`
	// +optional
	MagneticStoreRejectedDataLocation *TableSpecMagneticStoreWritePropertiesMagneticStoreRejectedDataLocation `json:"magneticStoreRejectedDataLocation,omitempty" tf:"magnetic_store_rejected_data_location"`
}

type TableSpecRetentionProperties struct {
	MagneticStoreRetentionPeriodInDays *int64 `json:"magneticStoreRetentionPeriodInDays" tf:"magnetic_store_retention_period_in_days"`
	MemoryStoreRetentionPeriodInHours  *int64 `json:"memoryStoreRetentionPeriodInHours" tf:"memory_store_retention_period_in_hours"`
}

type TableSpec struct {
	State *TableSpecResource `json:"state,omitempty" tf:"-"`

	Resource TableSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type TableSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	Arn          *string `json:"arn,omitempty" tf:"arn"`
	DatabaseName *string `json:"databaseName" tf:"database_name"`
	// +optional
	MagneticStoreWriteProperties *TableSpecMagneticStoreWriteProperties `json:"magneticStoreWriteProperties,omitempty" tf:"magnetic_store_write_properties"`
	// +optional
	RetentionProperties *TableSpecRetentionProperties `json:"retentionProperties,omitempty" tf:"retention_properties"`
	TableName           *string                       `json:"tableName" tf:"table_name"`
	// +optional
	Tags *map[string]string `json:"tags,omitempty" tf:"tags"`
	// +optional
	TagsAll *map[string]string `json:"tagsAll,omitempty" tf:"tags_all"`
}

type TableStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// TableList is a list of Tables
type TableList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Table CRD objects
	Items []Table `json:"items,omitempty"`
}
