/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type PipelineDefinition struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              PipelineDefinitionSpec   `json:"spec,omitempty"`
	Status            PipelineDefinitionStatus `json:"status,omitempty"`
}

type PipelineDefinitionSpecParameterObjectAttribute struct {
	Key         *string `json:"key" tf:"key"`
	StringValue *string `json:"stringValue" tf:"string_value"`
}

type PipelineDefinitionSpecParameterObject struct {
	// +optional
	Attribute []PipelineDefinitionSpecParameterObjectAttribute `json:"attribute,omitempty" tf:"attribute"`
	ID        *string                                          `json:"ID" tf:"id"`
}

type PipelineDefinitionSpecParameterValue struct {
	ID          *string `json:"ID" tf:"id"`
	StringValue *string `json:"stringValue" tf:"string_value"`
}

type PipelineDefinitionSpecPipelineObjectField struct {
	Key *string `json:"key" tf:"key"`
	// +optional
	RefValue *string `json:"refValue,omitempty" tf:"ref_value"`
	// +optional
	StringValue *string `json:"stringValue,omitempty" tf:"string_value"`
}

type PipelineDefinitionSpecPipelineObject struct {
	// +optional
	Field []PipelineDefinitionSpecPipelineObjectField `json:"field,omitempty" tf:"field"`
	ID    *string                                     `json:"ID" tf:"id"`
	Name  *string                                     `json:"name" tf:"name"`
}

type PipelineDefinitionSpec struct {
	State *PipelineDefinitionSpecResource `json:"state,omitempty" tf:"-"`

	Resource PipelineDefinitionSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type PipelineDefinitionSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	ParameterObject []PipelineDefinitionSpecParameterObject `json:"parameterObject,omitempty" tf:"parameter_object"`
	// +optional
	ParameterValue []PipelineDefinitionSpecParameterValue `json:"parameterValue,omitempty" tf:"parameter_value"`
	PipelineID     *string                                `json:"pipelineID" tf:"pipeline_id"`
	PipelineObject []PipelineDefinitionSpecPipelineObject `json:"pipelineObject" tf:"pipeline_object"`
}

type PipelineDefinitionStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// PipelineDefinitionList is a list of PipelineDefinitions
type PipelineDefinitionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of PipelineDefinition CRD objects
	Items []PipelineDefinition `json:"items,omitempty"`
}
