/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Domain struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              DomainSpec   `json:"spec,omitempty"`
	Status            DomainStatus `json:"status,omitempty"`
}

type DomainSpecEndpointOptions struct {
	// +optional
	EnforceHTTPS *bool `json:"enforceHTTPS,omitempty" tf:"enforce_https"`
	// +optional
	TlsSecurityPolicy *string `json:"tlsSecurityPolicy,omitempty" tf:"tls_security_policy"`
}

type DomainSpecIndexField struct {
	// +optional
	AnalysisScheme *string `json:"analysisScheme,omitempty" tf:"analysis_scheme"`
	// +optional
	DefaultValue *string `json:"defaultValue,omitempty" tf:"default_value"`
	// +optional
	Facet *bool `json:"facet,omitempty" tf:"facet"`
	// +optional
	Highlight *bool   `json:"highlight,omitempty" tf:"highlight"`
	Name      *string `json:"name" tf:"name"`
	// +optional
	Return *bool `json:"return,omitempty" tf:"return"`
	// +optional
	Search *bool `json:"search,omitempty" tf:"search"`
	// +optional
	Sort *bool   `json:"sort,omitempty" tf:"sort"`
	Type *string `json:"type" tf:"type"`
}

type DomainSpecScalingParameters struct {
	// +optional
	DesiredInstanceType *string `json:"desiredInstanceType,omitempty" tf:"desired_instance_type"`
	// +optional
	DesiredPartitionCount *int64 `json:"desiredPartitionCount,omitempty" tf:"desired_partition_count"`
	// +optional
	DesiredReplicationCount *int64 `json:"desiredReplicationCount,omitempty" tf:"desired_replication_count"`
}

type DomainSpec struct {
	State *DomainSpecResource `json:"state,omitempty" tf:"-"`

	Resource DomainSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type DomainSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	Arn *string `json:"arn,omitempty" tf:"arn"`
	// +optional
	DocumentServiceEndpoint *string `json:"documentServiceEndpoint,omitempty" tf:"document_service_endpoint"`
	// +optional
	DomainID *string `json:"domainID,omitempty" tf:"domain_id"`
	// +optional
	EndpointOptions *DomainSpecEndpointOptions `json:"endpointOptions,omitempty" tf:"endpoint_options"`
	// +optional
	IndexField []DomainSpecIndexField `json:"indexField,omitempty" tf:"index_field"`
	// +optional
	MultiAz *bool   `json:"multiAz,omitempty" tf:"multi_az"`
	Name    *string `json:"name" tf:"name"`
	// +optional
	ScalingParameters *DomainSpecScalingParameters `json:"scalingParameters,omitempty" tf:"scaling_parameters"`
	// +optional
	SearchServiceEndpoint *string `json:"searchServiceEndpoint,omitempty" tf:"search_service_endpoint"`
}

type DomainStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// DomainList is a list of Domains
type DomainList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Domain CRD objects
	Items []Domain `json:"items,omitempty"`
}
