/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type MultiRegionAccessPoint struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              MultiRegionAccessPointSpec   `json:"spec,omitempty"`
	Status            MultiRegionAccessPointStatus `json:"status,omitempty"`
}

type MultiRegionAccessPointSpecDetailsPublicAccessBlock struct {
	// +optional
	BlockPublicAcls *bool `json:"blockPublicAcls,omitempty" tf:"block_public_acls"`
	// +optional
	BlockPublicPolicy *bool `json:"blockPublicPolicy,omitempty" tf:"block_public_policy"`
	// +optional
	IgnorePublicAcls *bool `json:"ignorePublicAcls,omitempty" tf:"ignore_public_acls"`
	// +optional
	RestrictPublicBuckets *bool `json:"restrictPublicBuckets,omitempty" tf:"restrict_public_buckets"`
}

type MultiRegionAccessPointSpecDetailsRegion struct {
	Bucket *string `json:"bucket" tf:"bucket"`
}

type MultiRegionAccessPointSpecDetails struct {
	Name *string `json:"name" tf:"name"`
	// +optional
	PublicAccessBlock *MultiRegionAccessPointSpecDetailsPublicAccessBlock `json:"publicAccessBlock,omitempty" tf:"public_access_block"`
	// +kubebuilder:validation:MaxItems=20
	// +kubebuilder:validation:MinItems=1
	Region []MultiRegionAccessPointSpecDetailsRegion `json:"region" tf:"region"`
}

type MultiRegionAccessPointSpec struct {
	State *MultiRegionAccessPointSpecResource `json:"state,omitempty" tf:"-"`

	Resource MultiRegionAccessPointSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type MultiRegionAccessPointSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	AccountID *string `json:"accountID,omitempty" tf:"account_id"`
	// +optional
	Alias *string `json:"alias,omitempty" tf:"alias"`
	// +optional
	Arn     *string                            `json:"arn,omitempty" tf:"arn"`
	Details *MultiRegionAccessPointSpecDetails `json:"details" tf:"details"`
	// +optional
	DomainName *string `json:"domainName,omitempty" tf:"domain_name"`
	// +optional
	Status *string `json:"status,omitempty" tf:"status"`
}

type MultiRegionAccessPointStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// MultiRegionAccessPointList is a list of MultiRegionAccessPoints
type MultiRegionAccessPointList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of MultiRegionAccessPoint CRD objects
	Items []MultiRegionAccessPoint `json:"items,omitempty"`
}
